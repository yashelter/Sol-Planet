{"version":3,"sources":["candy-machine.ts","connection.tsx","utils.ts","PhaseHeader.tsx","MintButton.tsx","AntiRug.tsx","countdown.tsx","Home.tsx","confetti.tsx","App.tsx","reportWebVitals.ts","index.tsx","fair-launch.ts"],"names":["CANDY_MACHINE_PROGRAM","anchor","PublicKey","TOKEN_METADATA_PROGRAM_ID","awaitTransactionSignatureConfirmation","txid","timeout","connection","a","queryStatus","done","status","slot","confirmations","err","subId","Promise","resolve","reject","setTimeout","console","log","getSignatureStatuses","signatureStatuses","value","sleep","_signatureSubscriptions","removeSignatureListener","createAssociatedTokenAccountInstruction","associatedTokenAddress","payer","walletAddress","splTokenMintAddress","keys","pubkey","isSigner","isWritable","SystemProgram","programId","TOKEN_PROGRAM_ID","SYSVAR_RENT_PUBKEY","TransactionInstruction","SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID","data","Buffer","from","getCandyMachineState","anchorWallet","candyMachineId","provider","preflightCommitment","fetchIdl","idl","program","account","candyMachine","fetch","state","itemsAvailable","toNumber","itemsRedeemed","itemsRemaining","id","isSoldOut","isActive","goLiveDate","Date","getTime","endSettings","endSettingType","date","number","treasury","wallet","tokenMint","gatekeeper","whitelistMintSettings","hiddenSettings","price","getMasterEdition","mint","findProgramAddress","toBuffer","getMetadata","getCandyMachineCreator","mintOneToken","Keypair","generate","getAtaForMint","publicKey","userTokenAccountAddress","userPayingAccountAddress","candyMachineAddress","remainingAccounts","signers","cleanupInstructions","MintLayout","span","getMinimumBalanceForRentExemption","fromPubkey","newAccountPubkey","space","lamports","createAccount","Token","createInitMintInstruction","createMintToInstruction","instructions","getNetworkToken","gatekeeperNetwork","push","expireOnUse","CIVIC","getNetworkExpire","whitelistToken","mode","burnEveryTime","whitelistBurnAuthority","getAccountInfo","createApproveInstruction","createRevokeInstruction","transferAuthority","metadataAddress","masterEdition","candyMachineCreator","creatorBump","instruction","mintNft","accounts","metadata","mintAuthority","updateAuthority","tokenMetadataProgram","tokenProgram","systemProgram","rent","clock","SYSVAR_CLOCK_PUBKEY","recentBlockhashes","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","instructionSysvarAccount","SYSVAR_INSTRUCTIONS_PUBKEY","length","undefined","sendTransactions","txs","map","t","ms","SequenceType","instructionSet","signersSet","sequenceType","Parallel","commitment","successCallback","ind","failCallback","block","WalletNotConnectedError","unsignedTxns","getRecentBlockhash","i","transaction","Transaction","forEach","add","recentBlockhash","blockhash","setSigners","s","partialSign","signAllTransactions","signedTxns","pendingTxns","breakEarlyObject","breakEarly","signedTxnPromise","sendSignedTransaction","signedTransaction","then","catch","reason","StopOnFailure","all","getUnixTs","DEFAULT_TIMEOUT","rawTransaction","serialize","startTime","sendRawTransaction","skipPreflight","confirmation","Error","error","simulateResult","simulateTransaction","logs","line","startsWith","slice","JSON","stringify","_recentBlockhash","_disableBlockhashCaching","signData","serializeMessage","wireTransaction","_serialize","encodedTransaction","toString","args","encoding","_rpcRequest","res","message","result","onSignature","context","e","FAIR_LAUNCH_PROGRAM_ID","toDate","numberFormater","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","formatNumber","format","val","asNumber","LAMPORTS_PER_SOL","getFairLaunchTicketSeqLookup","seq","toArrayLike","buyer","Phase","CTAButton","styled","Button","MintButton","onMint","fairLaunch","isMinting","fairLaunchBalance","useGateway","requestGatewayToken","gatewayStatus","useState","clicked","setClicked","useEffect","GatewayStatus","ACTIVE","disabled","ticket","punched","onClick","variant","CircularProgress","AntiRug","setIsMinting","setAlertState","antiRugPolicyOpen","setAnitRugPolicyOpen","onRugRefund","receiveRefund","open","severity","Container","maxWidth","position","display","flexDirection","justifyContent","Link","component","color","align","Dialog","onClose","PaperProps","backgroundColor","borderRadius","padding","antiRugSetting","selfDestructDate","reserveBp","tokenRequirement","numberOfTokens","toLocaleDateString","toLocaleTimeString","withdrawn","now","textAlign","marginTop","useStyles","makeStyles","theme","createStyles","root","spacing","margin","marginRight","width","height","alignContent","alignItems","background","fontSize","fontWeight","item","PhaseCountdown","start","end","onComplete","classes","isFixed","renderCountdown","days","hours","minutes","seconds","completed","className","Paper","elevation","renderer","getPhase","curr","phaseOne","phaseOneStart","phaseOneEnd","phaseTwoEnd","candyMachineGoLive","AnticipationPhase","SetPrice","GracePeriod","phaseThreeStarted","Lottery","Phase4","WaitForCM","RaffleFinished","Unknown","Header","props","phaseName","desc","Grid","container","xs","direction","Typography","PhaseHeader","phase","candyMachinePredatesFairLaunch","rpcUrl","useWallet","lotteryDuration","ConnectButton","WalletDialogButton","MintContainer","div","dialogStyles","closeButton","right","top","palette","grey","ValueSlider","Slider","border","boxShadow","lineHeight","marginLeft","isWinner","lottery","myByte","Math","floor","positionFromRight","pow","Home","setFairLaunchBalance","yourSOLBalance","setYourSOLBalance","rpcHost","contributed","setContributed","useMemo","signTransaction","alertState","setFairLaunch","setCandyMachine","howToOpen","setHowToOpen","refundExplainerOpen","setRefundExplainerOpen","document","getElementById","click","connected","unpunched","onPunchTicket","mintTxId","txTimeout","msg","code","window","location","reload","indexOf","getBalance","balance","fairLaunchId","getFairLaunchState","getTokenAccountBalance","uiAmount","ticks","priceRangeEnd","priceRangeStart","tickSize","randomTick","round","random","currentMedian","cndy","min","max","step","median","marks","label","filter","_","onDeposit","purchaseTicket","onRefundTicket","punchTicket","lt","notEnoughSOL","fee","amount","marginBottom","includes","paddingTop","Alert","gt","onChange","ev","valueLabelDisplay","clusterUrl","options","autoShowModal","disableTypography","IconButton","gutterBottom","toLocaleString","wrap","md","numberTicketsSold","Snackbar","autoHideDuration","ConfettiContext","React","createContext","ConfettiProvider","children","canvasRef","useRef","confettiRef","dropConfetti","current","visibility","particleCount","spread","origin","y","finally","confetti","create","resize","useWorker","Provider","ref","zIndex","left","createTheme","type","process","Connection","startDateSeed","parseInt","REACT_APP_CANDY_START_DATE","App","endpoint","clusterApiUrl","wallets","getPhantomWallet","getSolflareWallet","getSolletWallet","ThemeProvider","ConnectionProvider","WalletProvider","autoConnect","startDate","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","LotteryState","FAIR_LAUNCH_PROGRAM","getFairLaunchTicket","fairLaunchTicket","bump","fairLaunchData","lotteryData","Uint8Array","getFairLaunchLotteryBitmap","fairLaunchLotteryBitmap","fairLaunchLotteryBitmapObj","buyerTokenAccount","getSetupForTicketing","rpc","adjustTicket","__private","logAccounts","accountExists","anchorProgram","ticketKey","amountLamports","treasuryMint","ceil","amountNumber","fees","fairLaunchTicketSeqLookup","seqBump","createTicketSeq","toBase58"],"mappings":"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","file":"static/js/main.eb437331.chunk.js","sourcesContent":["import * as anchor from '@project-serum/anchor';\r\n\r\nimport { MintLayout, TOKEN_PROGRAM_ID, Token } from '@solana/spl-token';\r\nimport { SystemProgram } from '@solana/web3.js';\r\nimport { sendTransactions } from './connection';\r\n\r\nimport {\r\n  CIVIC,\r\n  getAtaForMint,\r\n  getNetworkExpire,\r\n  getNetworkToken,\r\n  SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\r\n} from './utils';\r\n\r\nexport const CANDY_MACHINE_PROGRAM = new anchor.web3.PublicKey(\r\n  'cndy3Z4yapfJBmL3ShUp5exZKqR3z33thTzeNMm2gRZ',\r\n);\r\n\r\nconst TOKEN_METADATA_PROGRAM_ID = new anchor.web3.PublicKey(\r\n  'metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s',\r\n);\r\n\r\ninterface CandyMachineState {\r\n  itemsAvailable: number;\r\n  itemsRedeemed: number;\r\n  itemsRemaining: number;\r\n  treasury: anchor.web3.PublicKey;\r\n  tokenMint: anchor.web3.PublicKey;\r\n  isSoldOut: boolean;\r\n  isActive: boolean;\r\n  goLiveDate: anchor.BN;\r\n  price: anchor.BN;\r\n  gatekeeper: null | {\r\n    expireOnUse: boolean;\r\n    gatekeeperNetwork: anchor.web3.PublicKey;\r\n  };\r\n  endSettings: null | [number, anchor.BN];\r\n  whitelistMintSettings: null | {\r\n    mode: any;\r\n    mint: anchor.web3.PublicKey;\r\n    presale: boolean;\r\n    discountPrice: null | anchor.BN;\r\n  };\r\n  hiddenSettings: null | {\r\n    name: string;\r\n    uri: string;\r\n    hash: Uint8Array;\r\n  };\r\n}\r\n\r\nexport interface CandyMachineAccount {\r\n  id: anchor.web3.PublicKey;\r\n  program: anchor.Program;\r\n  state: CandyMachineState;\r\n}\r\n\r\nexport const awaitTransactionSignatureConfirmation = async (\r\n  txid: anchor.web3.TransactionSignature,\r\n  timeout: number,\r\n  connection: anchor.web3.Connection,\r\n  commitment: anchor.web3.Commitment = 'recent',\r\n  queryStatus = false,\r\n): Promise<anchor.web3.SignatureStatus | null | void> => {\r\n  let done = false;\r\n  let status: anchor.web3.SignatureStatus | null | void = {\r\n    slot: 0,\r\n    confirmations: 0,\r\n    err: null,\r\n  };\r\n  let subId = 0;\r\n  status = await new Promise(async (resolve, reject) => {\r\n    setTimeout(() => {\r\n      if (done) {\r\n        return;\r\n      }\r\n      done = true;\r\n      console.log('Rejecting for timeout...');\r\n      reject({ timeout: true });\r\n    }, timeout);\r\n    while (!done && queryStatus) {\r\n      // eslint-disable-next-line no-loop-func\r\n      (async () => {\r\n        try {\r\n          const signatureStatuses = await connection.getSignatureStatuses([\r\n            txid,\r\n          ]);\r\n          status = signatureStatuses && signatureStatuses.value[0];\r\n          if (!done) {\r\n            if (!status) {\r\n              console.log('REST null result for', txid, status);\r\n            } else if (status.err) {\r\n              console.log('REST error for', txid, status);\r\n              done = true;\r\n              reject(status.err);\r\n            } else if (!status.confirmations) {\r\n              console.log('REST no confirmations for', txid, status);\r\n            } else {\r\n              console.log('REST confirmation for', txid, status);\r\n              done = true;\r\n              resolve(status);\r\n            }\r\n          }\r\n        } catch (e) {\r\n          if (!done) {\r\n            console.log('REST connection error: txid', txid, e);\r\n          }\r\n        }\r\n      })();\r\n      await sleep(2000);\r\n    }\r\n  });\r\n\r\n  //@ts-ignore\r\n  if (connection._signatureSubscriptions[subId]) {\r\n    connection.removeSignatureListener(subId);\r\n  }\r\n  done = true;\r\n  console.log('Returning status', status);\r\n  return status;\r\n};\r\n\r\n/* export */ const createAssociatedTokenAccountInstruction = (\r\n  associatedTokenAddress: anchor.web3.PublicKey,\r\n  payer: anchor.web3.PublicKey,\r\n  walletAddress: anchor.web3.PublicKey,\r\n  splTokenMintAddress: anchor.web3.PublicKey,\r\n) => {\r\n  const keys = [\r\n    { pubkey: payer, isSigner: true, isWritable: true },\r\n    { pubkey: associatedTokenAddress, isSigner: false, isWritable: true },\r\n    { pubkey: walletAddress, isSigner: false, isWritable: false },\r\n    { pubkey: splTokenMintAddress, isSigner: false, isWritable: false },\r\n    {\r\n      pubkey: anchor.web3.SystemProgram.programId,\r\n      isSigner: false,\r\n      isWritable: false,\r\n    },\r\n    { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\r\n    {\r\n      pubkey: anchor.web3.SYSVAR_RENT_PUBKEY,\r\n      isSigner: false,\r\n      isWritable: false,\r\n    },\r\n  ];\r\n  return new anchor.web3.TransactionInstruction({\r\n    keys,\r\n    programId: SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\r\n    data: Buffer.from([]),\r\n  });\r\n};\r\n\r\nexport const getCandyMachineState = async (\r\n  anchorWallet: anchor.Wallet,\r\n  candyMachineId: anchor.web3.PublicKey,\r\n  connection: anchor.web3.Connection,\r\n): Promise<CandyMachineAccount> => {\r\n  const provider = new anchor.Provider(connection, anchorWallet, {\r\n    preflightCommitment: 'recent',\r\n  });\r\n\r\n  const idl = await anchor.Program.fetchIdl(CANDY_MACHINE_PROGRAM, provider);\r\n\r\n  const program = new anchor.Program(idl, CANDY_MACHINE_PROGRAM, provider);\r\n\r\n  const state: any = await program.account.candyMachine.fetch(candyMachineId);\r\n  const itemsAvailable = state.data.itemsAvailable.toNumber();\r\n  const itemsRedeemed = state.itemsRedeemed.toNumber();\r\n  const itemsRemaining = itemsAvailable - itemsRedeemed;\r\n\r\n  return {\r\n    id: candyMachineId,\r\n    program,\r\n    state: {\r\n      itemsAvailable,\r\n      itemsRedeemed,\r\n      itemsRemaining,\r\n      isSoldOut: itemsRemaining === 0,\r\n      isActive:\r\n        state.data.goLiveDate.toNumber() < new Date().getTime() / 1000 &&\r\n        (state.endSettings\r\n          ? state.endSettings.endSettingType.date\r\n            ? state.endSettings.number.toNumber() > new Date().getTime() / 1000\r\n            : itemsRedeemed < state.endSettings.number.toNumber()\r\n          : true),\r\n      goLiveDate: state.data.goLiveDate,\r\n      treasury: state.wallet,\r\n      tokenMint: state.tokenMint,\r\n      gatekeeper: state.data.gatekeeper,\r\n      endSettings: state.data.endSettings,\r\n      whitelistMintSettings: state.data.whitelistMintSettings,\r\n      hiddenSettings: state.data.hiddenSettings,\r\n      price: state.data.price,\r\n    },\r\n  };\r\n};\r\n\r\nconst getMasterEdition = async (\r\n  mint: anchor.web3.PublicKey,\r\n): Promise<anchor.web3.PublicKey> => {\r\n  return (\r\n    await anchor.web3.PublicKey.findProgramAddress(\r\n      [\r\n        Buffer.from('metadata'),\r\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\r\n        mint.toBuffer(),\r\n        Buffer.from('edition'),\r\n      ],\r\n      TOKEN_METADATA_PROGRAM_ID,\r\n    )\r\n  )[0];\r\n};\r\n\r\nconst getMetadata = async (\r\n  mint: anchor.web3.PublicKey,\r\n): Promise<anchor.web3.PublicKey> => {\r\n  return (\r\n    await anchor.web3.PublicKey.findProgramAddress(\r\n      [\r\n        Buffer.from('metadata'),\r\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\r\n        mint.toBuffer(),\r\n      ],\r\n      TOKEN_METADATA_PROGRAM_ID,\r\n    )\r\n  )[0];\r\n};\r\n\r\nexport const getCandyMachineCreator = async (\r\n  candyMachine: anchor.web3.PublicKey,\r\n): Promise<[anchor.web3.PublicKey, number]> => {\r\n  return await anchor.web3.PublicKey.findProgramAddress(\r\n    [Buffer.from('candy_machine'), candyMachine.toBuffer()],\r\n    CANDY_MACHINE_PROGRAM,\r\n  );\r\n};\r\n\r\nexport const mintOneToken = async (\r\n  candyMachine: CandyMachineAccount,\r\n  payer: anchor.web3.PublicKey,\r\n): Promise<(string | undefined)[]> => {\r\n  const mint = anchor.web3.Keypair.generate();\r\n\r\n  const userTokenAccountAddress = (\r\n    await getAtaForMint(mint.publicKey, payer)\r\n  )[0];\r\n\r\n  const userPayingAccountAddress = candyMachine.state.tokenMint\r\n    ? (await getAtaForMint(candyMachine.state.tokenMint, payer))[0]\r\n    : payer;\r\n\r\n  const candyMachineAddress = candyMachine.id;\r\n  const remainingAccounts = [];\r\n  const signers: anchor.web3.Keypair[] = [mint];\r\n  const cleanupInstructions = [];\r\n  const instructions = [\r\n    anchor.web3.SystemProgram.createAccount({\r\n      fromPubkey: payer,\r\n      newAccountPubkey: mint.publicKey,\r\n      space: MintLayout.span,\r\n      lamports:\r\n        await candyMachine.program.provider.connection.getMinimumBalanceForRentExemption(\r\n          MintLayout.span,\r\n        ),\r\n      programId: TOKEN_PROGRAM_ID,\r\n    }),\r\n    Token.createInitMintInstruction(\r\n      TOKEN_PROGRAM_ID,\r\n      mint.publicKey,\r\n      0,\r\n      payer,\r\n      payer,\r\n    ),\r\n    createAssociatedTokenAccountInstruction(\r\n      userTokenAccountAddress,\r\n      payer,\r\n      payer,\r\n      mint.publicKey,\r\n    ),\r\n    Token.createMintToInstruction(\r\n      TOKEN_PROGRAM_ID,\r\n      mint.publicKey,\r\n      userTokenAccountAddress,\r\n      payer,\r\n      [],\r\n      1,\r\n    ),\r\n  ];\r\n\r\n  if (candyMachine.state.gatekeeper) {\r\n    remainingAccounts.push({\r\n      pubkey: (\r\n        await getNetworkToken(\r\n          payer,\r\n          candyMachine.state.gatekeeper.gatekeeperNetwork,\r\n        )\r\n      )[0],\r\n      isWritable: true,\r\n      isSigner: false,\r\n    });\r\n    if (candyMachine.state.gatekeeper.expireOnUse) {\r\n      remainingAccounts.push({\r\n        pubkey: CIVIC,\r\n        isWritable: false,\r\n        isSigner: false,\r\n      });\r\n      remainingAccounts.push({\r\n        pubkey: (\r\n          await getNetworkExpire(\r\n            candyMachine.state.gatekeeper.gatekeeperNetwork,\r\n          )\r\n        )[0],\r\n        isWritable: false,\r\n        isSigner: false,\r\n      });\r\n    }\r\n  }\r\n  if (candyMachine.state.whitelistMintSettings) {\r\n    const mint = new anchor.web3.PublicKey(\r\n      candyMachine.state.whitelistMintSettings.mint,\r\n    );\r\n\r\n    const whitelistToken = (await getAtaForMint(mint, payer))[0];\r\n    remainingAccounts.push({\r\n      pubkey: whitelistToken,\r\n      isWritable: true,\r\n      isSigner: false,\r\n    });\r\n\r\n    if (candyMachine.state.whitelistMintSettings.mode.burnEveryTime) {\r\n      const whitelistBurnAuthority = anchor.web3.Keypair.generate();\r\n\r\n      remainingAccounts.push({\r\n        pubkey: mint,\r\n        isWritable: true,\r\n        isSigner: false,\r\n      });\r\n      remainingAccounts.push({\r\n        pubkey: whitelistBurnAuthority.publicKey,\r\n        isWritable: false,\r\n        isSigner: true,\r\n      });\r\n      signers.push(whitelistBurnAuthority);\r\n      const exists =\r\n        await candyMachine.program.provider.connection.getAccountInfo(\r\n          whitelistToken,\r\n        );\r\n      if (exists) {\r\n        instructions.push(\r\n          Token.createApproveInstruction(\r\n            TOKEN_PROGRAM_ID,\r\n            whitelistToken,\r\n            whitelistBurnAuthority.publicKey,\r\n            payer,\r\n            [],\r\n            1,\r\n          ),\r\n        );\r\n        cleanupInstructions.push(\r\n          Token.createRevokeInstruction(\r\n            TOKEN_PROGRAM_ID,\r\n            whitelistToken,\r\n            payer,\r\n            [],\r\n          ),\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  if (candyMachine.state.tokenMint) {\r\n    const transferAuthority = anchor.web3.Keypair.generate();\r\n\r\n    signers.push(transferAuthority);\r\n    remainingAccounts.push({\r\n      pubkey: userPayingAccountAddress,\r\n      isWritable: true,\r\n      isSigner: false,\r\n    });\r\n    remainingAccounts.push({\r\n      pubkey: transferAuthority.publicKey,\r\n      isWritable: false,\r\n      isSigner: true,\r\n    });\r\n\r\n    instructions.push(\r\n      Token.createApproveInstruction(\r\n        TOKEN_PROGRAM_ID,\r\n        userPayingAccountAddress,\r\n        transferAuthority.publicKey,\r\n        payer,\r\n        [],\r\n        candyMachine.state.price.toNumber(),\r\n      ),\r\n    );\r\n    cleanupInstructions.push(\r\n      Token.createRevokeInstruction(\r\n        TOKEN_PROGRAM_ID,\r\n        userPayingAccountAddress,\r\n        payer,\r\n        [],\r\n      ),\r\n    );\r\n  }\r\n  const metadataAddress = await getMetadata(mint.publicKey);\r\n  const masterEdition = await getMasterEdition(mint.publicKey);\r\n\r\n  const [candyMachineCreator, creatorBump] = await getCandyMachineCreator(\r\n    candyMachineAddress,\r\n  );\r\n\r\n  instructions.push(\r\n    await candyMachine.program.instruction.mintNft(creatorBump, {\r\n      accounts: {\r\n        candyMachine: candyMachineAddress,\r\n        candyMachineCreator,\r\n        payer: payer,\r\n        wallet: candyMachine.state.treasury,\r\n        mint: mint.publicKey,\r\n        metadata: metadataAddress,\r\n        masterEdition,\r\n        mintAuthority: payer,\r\n        updateAuthority: payer,\r\n        tokenMetadataProgram: TOKEN_METADATA_PROGRAM_ID,\r\n        tokenProgram: TOKEN_PROGRAM_ID,\r\n        systemProgram: SystemProgram.programId,\r\n        rent: anchor.web3.SYSVAR_RENT_PUBKEY,\r\n        clock: anchor.web3.SYSVAR_CLOCK_PUBKEY,\r\n        recentBlockhashes: anchor.web3.SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\r\n        instructionSysvarAccount: anchor.web3.SYSVAR_INSTRUCTIONS_PUBKEY,\r\n      },\r\n      remainingAccounts:\r\n        remainingAccounts.length > 0 ? remainingAccounts : undefined,\r\n    }),\r\n  );\r\n\r\n  try {\r\n    return (\r\n      await sendTransactions(\r\n        candyMachine.program.provider.connection,\r\n        candyMachine.program.provider.wallet,\r\n        [instructions, cleanupInstructions],\r\n        [signers, []],\r\n      )\r\n    ).txs.map(t => t.txid);\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n\r\n  return [];\r\n};\r\n\r\nexport const shortenAddress = (address: string, chars = 4): string => {\r\n  return `${address.slice(0, chars)}...${address.slice(-chars)}`;\r\n};\r\n\r\nconst sleep = (ms: number): Promise<void> => {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n};\r\n","import {\r\n  Keypair,\r\n  Commitment,\r\n  Connection,\r\n  RpcResponseAndContext,\r\n  SignatureStatus,\r\n  SimulatedTransactionResponse,\r\n  Transaction,\r\n  TransactionInstruction,\r\n  TransactionSignature,\r\n  Blockhash,\r\n  FeeCalculator,\r\n} from '@solana/web3.js';\r\n\r\nimport { WalletNotConnectedError } from '@solana/wallet-adapter-base';\r\n\r\ninterface BlockhashAndFeeCalculator {\r\n  blockhash: Blockhash;\r\n  feeCalculator: FeeCalculator;\r\n}\r\n\r\nexport const getErrorForTransaction = async (\r\n  connection: Connection,\r\n  txid: string,\r\n) => {\r\n  // wait for all confirmation before geting transaction\r\n  await connection.confirmTransaction(txid, 'max');\r\n\r\n  const tx = await connection.getParsedConfirmedTransaction(txid);\r\n\r\n  const errors: string[] = [];\r\n  if (tx?.meta && tx.meta.logMessages) {\r\n    tx.meta.logMessages.forEach(log => {\r\n      const regex = /Error: (.*)/gm;\r\n      let m;\r\n      while ((m = regex.exec(log)) !== null) {\r\n        // This is necessary to avoid infinite loops with zero-width matches\r\n        if (m.index === regex.lastIndex) {\r\n          regex.lastIndex++;\r\n        }\r\n\r\n        if (m.length > 1) {\r\n          errors.push(m[1]);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nexport enum SequenceType {\r\n  Sequential,\r\n  Parallel,\r\n  StopOnFailure,\r\n}\r\n\r\nexport async function sendTransactionsWithManualRetry(\r\n  connection: Connection,\r\n  wallet: any,\r\n  instructions: TransactionInstruction[][],\r\n  signers: Keypair[][],\r\n): Promise<(string | undefined)[]> {\r\n  let stopPoint = 0;\r\n  let tries = 0;\r\n  let lastInstructionsLength = null;\r\n  let toRemoveSigners: Record<number, boolean> = {};\r\n  instructions = instructions.filter((instr, i) => {\r\n    if (instr.length > 0) {\r\n      return true;\r\n    } else {\r\n      toRemoveSigners[i] = true;\r\n      return false;\r\n    }\r\n  });\r\n  let ids: string[] = [];\r\n  let filteredSigners = signers.filter((_, i) => !toRemoveSigners[i]);\r\n\r\n  while (stopPoint < instructions.length && tries < 3) {\r\n    instructions = instructions.slice(stopPoint, instructions.length);\r\n    filteredSigners = filteredSigners.slice(stopPoint, filteredSigners.length);\r\n\r\n    if (instructions.length === lastInstructionsLength) tries = tries + 1;\r\n    else tries = 0;\r\n\r\n    try {\r\n      if (instructions.length === 1) {\r\n        const id = await sendTransactionWithRetry(\r\n          connection,\r\n          wallet,\r\n          instructions[0],\r\n          filteredSigners[0],\r\n          'single',\r\n        );\r\n        ids.push(id.txid);\r\n        stopPoint = 1;\r\n      } else {\r\n        const { txs } = await sendTransactions(\r\n          connection,\r\n          wallet,\r\n          instructions,\r\n          filteredSigners,\r\n          SequenceType.StopOnFailure,\r\n          'single',\r\n        );\r\n        ids = ids.concat(txs.map(t => t.txid));\r\n      }\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n    console.log(\r\n      'Died on ',\r\n      stopPoint,\r\n      'retrying from instruction',\r\n      instructions[stopPoint],\r\n      'instructions length is',\r\n      instructions.length,\r\n    );\r\n    lastInstructionsLength = instructions.length;\r\n  }\r\n\r\n  return ids;\r\n}\r\n\r\nexport const sendTransactions = async (\r\n  connection: Connection,\r\n  wallet: any,\r\n  instructionSet: TransactionInstruction[][],\r\n  signersSet: Keypair[][],\r\n  sequenceType: SequenceType = SequenceType.Parallel,\r\n  commitment: Commitment = 'singleGossip',\r\n  successCallback: (txid: string, ind: number) => void = (txid, ind) => { },\r\n  failCallback: (reason: string, ind: number) => boolean = (txid, ind) => false,\r\n  block?: BlockhashAndFeeCalculator,\r\n): Promise<{ number: number; txs: { txid: string; slot: number }[] }> => {\r\n  if (!wallet.publicKey) throw new WalletNotConnectedError();\r\n\r\n  const unsignedTxns: Transaction[] = [];\r\n\r\n  if (!block) {\r\n    block = await connection.getRecentBlockhash(commitment);\r\n  }\r\n\r\n  for (let i = 0; i < instructionSet.length; i++) {\r\n    const instructions = instructionSet[i];\r\n    const signers = signersSet[i];\r\n\r\n    if (instructions.length === 0) {\r\n      continue;\r\n    }\r\n\r\n    let transaction = new Transaction();\r\n    instructions.forEach(instruction => transaction.add(instruction));\r\n    transaction.recentBlockhash = block.blockhash;\r\n    transaction.setSigners(\r\n      // fee payed by the wallet owner\r\n      wallet.publicKey,\r\n      ...signers.map(s => s.publicKey),\r\n    );\r\n\r\n    if (signers.length > 0) {\r\n      transaction.partialSign(...signers);\r\n    }\r\n\r\n    unsignedTxns.push(transaction);\r\n  }\r\n\r\n  const signedTxns = await wallet.signAllTransactions(unsignedTxns);\r\n\r\n  const pendingTxns: Promise<{ txid: string; slot: number }>[] = [];\r\n\r\n  let breakEarlyObject = { breakEarly: false, i: 0 };\r\n  console.log(\r\n    'Signed txns length',\r\n    signedTxns.length,\r\n    'vs handed in length',\r\n    instructionSet.length,\r\n  );\r\n  for (let i = 0; i < signedTxns.length; i++) {\r\n    const signedTxnPromise = sendSignedTransaction({\r\n      connection,\r\n      signedTransaction: signedTxns[i],\r\n    });\r\n\r\n    signedTxnPromise\r\n      .then(({ txid, slot }) => {\r\n        successCallback(txid, i);\r\n      })\r\n      .catch(reason => {\r\n        // @ts-ignore\r\n        failCallback(signedTxns[i], i);\r\n        if (sequenceType === SequenceType.StopOnFailure) {\r\n          breakEarlyObject.breakEarly = true;\r\n          breakEarlyObject.i = i;\r\n        }\r\n      });\r\n\r\n    if (sequenceType !== SequenceType.Parallel) {\r\n      try {\r\n        await signedTxnPromise;\r\n      } catch (e) {\r\n        console.log('Caught failure', e);\r\n        if (breakEarlyObject.breakEarly) {\r\n          console.log('Died on ', breakEarlyObject.i);\r\n          // Return the txn we failed on by index\r\n          return {\r\n            number: breakEarlyObject.i,\r\n            txs: await Promise.all(pendingTxns),\r\n          };\r\n        }\r\n      }\r\n    } else {\r\n      pendingTxns.push(signedTxnPromise);\r\n    }\r\n  }\r\n\r\n  if (sequenceType !== SequenceType.Parallel) {\r\n    await Promise.all(pendingTxns);\r\n  }\r\n\r\n  return { number: signedTxns.length, txs: await Promise.all(pendingTxns) };\r\n};\r\n\r\nexport const sendTransaction = async (\r\n  connection: Connection,\r\n  wallet: any,\r\n  instructions: TransactionInstruction[],\r\n  signers: Keypair[],\r\n  awaitConfirmation = true,\r\n  commitment: Commitment = 'singleGossip',\r\n  includesFeePayer: boolean = false,\r\n  block?: BlockhashAndFeeCalculator,\r\n) => {\r\n  if (!wallet.publicKey) throw new WalletNotConnectedError();\r\n\r\n  let transaction = new Transaction();\r\n  instructions.forEach(instruction => transaction.add(instruction));\r\n  transaction.recentBlockhash = (\r\n    block || (await connection.getRecentBlockhash(commitment))\r\n  ).blockhash;\r\n\r\n  if (includesFeePayer) {\r\n    transaction.setSigners(...signers.map(s => s.publicKey));\r\n  } else {\r\n    transaction.setSigners(\r\n      // fee payed by the wallet owner\r\n      wallet.publicKey,\r\n      ...signers.map(s => s.publicKey),\r\n    );\r\n  }\r\n\r\n  if (signers.length > 0) {\r\n    transaction.partialSign(...signers);\r\n  }\r\n  if (!includesFeePayer) {\r\n    transaction = await wallet.signTransaction(transaction);\r\n  }\r\n\r\n  const rawTransaction = transaction.serialize();\r\n  let options = {\r\n    skipPreflight: true,\r\n    commitment,\r\n  };\r\n\r\n  const txid = await connection.sendRawTransaction(rawTransaction, options);\r\n  let slot = 0;\r\n\r\n  if (awaitConfirmation) {\r\n    const confirmation = await awaitTransactionSignatureConfirmation(\r\n      txid,\r\n      DEFAULT_TIMEOUT,\r\n      connection,\r\n      commitment,\r\n    );\r\n\r\n    if (!confirmation)\r\n      throw new Error('Timed out awaiting confirmation on transaction');\r\n    slot = confirmation?.slot || 0;\r\n\r\n    if (confirmation?.err) {\r\n      const errors = await getErrorForTransaction(connection, txid);\r\n\r\n      console.log(errors);\r\n      throw new Error(`Raw transaction ${txid} failed`);\r\n    }\r\n  }\r\n\r\n  return { txid, slot };\r\n};\r\n\r\nexport const sendTransactionWithRetry = async (\r\n  connection: Connection,\r\n  wallet: any,\r\n  instructions: TransactionInstruction[],\r\n  signers: Keypair[],\r\n  commitment: Commitment = 'singleGossip',\r\n  includesFeePayer: boolean = false,\r\n  block?: BlockhashAndFeeCalculator,\r\n  beforeSend?: () => void,\r\n) => {\r\n  if (!wallet.publicKey) throw new WalletNotConnectedError();\r\n\r\n  let transaction = new Transaction();\r\n  instructions.forEach(instruction => transaction.add(instruction));\r\n  transaction.recentBlockhash = (\r\n    block || (await connection.getRecentBlockhash(commitment))\r\n  ).blockhash;\r\n\r\n  if (includesFeePayer) {\r\n    transaction.setSigners(...signers.map(s => s.publicKey));\r\n  } else {\r\n    transaction.setSigners(\r\n      // fee payed by the wallet owner\r\n      wallet.publicKey,\r\n      ...signers.map(s => s.publicKey),\r\n    );\r\n  }\r\n\r\n  if (signers.length > 0) {\r\n    transaction.partialSign(...signers);\r\n  }\r\n  if (!includesFeePayer) {\r\n    transaction = await wallet.signTransaction(transaction);\r\n  }\r\n\r\n  if (beforeSend) {\r\n    beforeSend();\r\n  }\r\n\r\n  const { txid, slot } = await sendSignedTransaction({\r\n    connection,\r\n    signedTransaction: transaction,\r\n  });\r\n\r\n  return { txid, slot };\r\n};\r\n\r\nexport const getUnixTs = () => {\r\n  return new Date().getTime() / 1000;\r\n};\r\n\r\nconst DEFAULT_TIMEOUT = 15000;\r\n\r\nexport async function sendSignedTransaction({\r\n  signedTransaction,\r\n  connection,\r\n  timeout = DEFAULT_TIMEOUT,\r\n}: {\r\n  signedTransaction: Transaction;\r\n  connection: Connection;\r\n  sendingMessage?: string;\r\n  sentMessage?: string;\r\n  successMessage?: string;\r\n  timeout?: number;\r\n}): Promise<{ txid: string; slot: number }> {\r\n  const rawTransaction = signedTransaction.serialize();\r\n  const startTime = getUnixTs();\r\n  let slot = 0;\r\n  const txid: TransactionSignature = await connection.sendRawTransaction(\r\n    rawTransaction,\r\n    {\r\n      skipPreflight: true,\r\n    },\r\n  );\r\n\r\n  console.log('Started awaiting confirmation for', txid);\r\n\r\n  let done = false;\r\n  (async () => {\r\n    while (!done && getUnixTs() - startTime < timeout) {\r\n      connection.sendRawTransaction(rawTransaction, {\r\n        skipPreflight: true,\r\n      });\r\n      await sleep(500);\r\n    }\r\n  })();\r\n  try {\r\n    const confirmation = await awaitTransactionSignatureConfirmation(\r\n      txid,\r\n      timeout,\r\n      connection,\r\n      'recent',\r\n      true,\r\n    );\r\n\r\n    if (!confirmation)\r\n      throw new Error('Timed out awaiting confirmation on transaction');\r\n\r\n    if (confirmation.err) {\r\n      console.error(confirmation.err);\r\n      throw new Error('Transaction failed: Custom instruction error');\r\n    }\r\n\r\n    slot = confirmation?.slot || 0;\r\n  } catch (err: any) {\r\n    console.error('Timeout Error caught', err);\r\n    if (err.timeout) {\r\n      throw new Error('Timed out awaiting confirmation on transaction');\r\n    }\r\n    let simulateResult: SimulatedTransactionResponse | null = null;\r\n    try {\r\n      simulateResult = (\r\n        await simulateTransaction(connection, signedTransaction, 'single')\r\n      ).value;\r\n    } catch (e) { }\r\n    if (simulateResult && simulateResult.err) {\r\n      if (simulateResult.logs) {\r\n        for (let i = simulateResult.logs.length - 1; i >= 0; --i) {\r\n          const line = simulateResult.logs[i];\r\n          if (line.startsWith('Program log: ')) {\r\n            throw new Error(\r\n              'Transaction failed: ' + line.slice('Program log: '.length),\r\n            );\r\n          }\r\n        }\r\n      }\r\n      throw new Error(JSON.stringify(simulateResult.err));\r\n    }\r\n    // throw new Error('Transaction failed');\r\n  } finally {\r\n    done = true;\r\n  }\r\n\r\n  console.log('Latency', txid, getUnixTs() - startTime);\r\n  return { txid, slot };\r\n}\r\n\r\nasync function simulateTransaction(\r\n  connection: Connection,\r\n  transaction: Transaction,\r\n  commitment: Commitment,\r\n): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\r\n  // @ts-ignore\r\n  transaction.recentBlockhash = await connection._recentBlockhash(\r\n    // @ts-ignore\r\n    connection._disableBlockhashCaching,\r\n  );\r\n\r\n  const signData = transaction.serializeMessage();\r\n  // @ts-ignore\r\n  const wireTransaction = transaction._serialize(signData);\r\n  const encodedTransaction = wireTransaction.toString('base64');\r\n  const config: any = { encoding: 'base64', commitment };\r\n  const args = [encodedTransaction, config];\r\n\r\n  // @ts-ignore\r\n  const res = await connection._rpcRequest('simulateTransaction', args);\r\n  if (res.error) {\r\n    throw new Error('failed to simulate transaction: ' + res.error.message);\r\n  }\r\n  return res.result;\r\n}\r\n\r\nasync function awaitTransactionSignatureConfirmation(\r\n  txid: TransactionSignature,\r\n  timeout: number,\r\n  connection: Connection,\r\n  commitment: Commitment = 'recent',\r\n  queryStatus = false,\r\n): Promise<SignatureStatus | null | void> {\r\n  let done = false;\r\n  let status: SignatureStatus | null | void = {\r\n    slot: 0,\r\n    confirmations: 0,\r\n    err: null,\r\n  };\r\n  let subId = 0;\r\n  status = await new Promise(async (resolve, reject) => {\r\n    setTimeout(() => {\r\n      if (done) {\r\n        return;\r\n      }\r\n      done = true;\r\n      console.log('Rejecting for timeout...');\r\n      reject({ timeout: true });\r\n    }, timeout);\r\n    try {\r\n      subId = connection.onSignature(\r\n        txid,\r\n        (result, context) => {\r\n          done = true;\r\n          status = {\r\n            err: result.err,\r\n            slot: context.slot,\r\n            confirmations: 0,\r\n          };\r\n          if (result.err) {\r\n            console.log('Rejected via websocket', result.err);\r\n            reject(status);\r\n          } else {\r\n            console.log('Resolved via websocket', result);\r\n            resolve(status);\r\n          }\r\n        },\r\n        commitment,\r\n      );\r\n    } catch (e) {\r\n      done = true;\r\n      console.error('WS error in setup', txid, e);\r\n    }\r\n    while (!done && queryStatus) {\r\n      // eslint-disable-next-line no-loop-func\r\n      (async () => {\r\n        try {\r\n          const signatureStatuses = await connection.getSignatureStatuses([\r\n            txid,\r\n          ]);\r\n          status = signatureStatuses && signatureStatuses.value[0];\r\n          if (!done) {\r\n            if (!status) {\r\n              console.log('REST null result for', txid, status);\r\n            } else if (status.err) {\r\n              console.log('REST error for', txid, status);\r\n              done = true;\r\n              reject(status.err);\r\n            } else if (!status.confirmations) {\r\n              console.log('REST no confirmations for', txid, status);\r\n            } else {\r\n              console.log('REST confirmation for', txid, status);\r\n              done = true;\r\n              resolve(status);\r\n            }\r\n          }\r\n        } catch (e) {\r\n          if (!done) {\r\n            console.log('REST connection error: txid', txid, e);\r\n          }\r\n        }\r\n      })();\r\n      await sleep(2000);\r\n    }\r\n  });\r\n\r\n  //@ts-ignore\r\n  if (connection._signatureSubscriptions[subId])\r\n    connection.removeSignatureListener(subId);\r\n  done = true;\r\n  console.log('Returning status', status);\r\n  return status;\r\n}\r\nexport function sleep(ms: number): Promise<void> {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n","import * as anchor from '@project-serum/anchor';\r\nimport { TOKEN_PROGRAM_ID } from '@solana/spl-token';\r\nimport { SystemProgram } from '@solana/web3.js';\r\nimport {\r\n  LAMPORTS_PER_SOL,\r\n  SYSVAR_RENT_PUBKEY,\r\n  TransactionInstruction,\r\n} from '@solana/web3.js';\r\n\r\nexport interface AlertState {\r\n  open: boolean;\r\n  message: string;\r\n  severity: 'success' | 'info' | 'warning' | 'error' | undefined;\r\n}\r\n\r\nexport const FAIR_LAUNCH_PROGRAM_ID = new anchor.web3.PublicKey(\r\n  'faircnAB9k59Y4TXmLabBULeuTLgV7TkGMGNkjnA15j',\r\n);\r\n\r\nexport const toDate = (value?: anchor.BN) => {\r\n  if (!value) {\r\n    return;\r\n  }\r\n\r\n  return new Date(value.toNumber() * 1000);\r\n};\r\n\r\nconst numberFormater = new Intl.NumberFormat('en-US', {\r\n  style: 'decimal',\r\n  minimumFractionDigits: 2,\r\n  maximumFractionDigits: 2,\r\n});\r\n\r\nexport const formatNumber = {\r\n  format: (val?: number) => {\r\n    if (!val) {\r\n      return '--';\r\n    }\r\n\r\n    return numberFormater.format(val);\r\n  },\r\n  asNumber: (val?: anchor.BN) => {\r\n    if (!val) {\r\n      return undefined;\r\n    }\r\n\r\n    return val.toNumber() / LAMPORTS_PER_SOL;\r\n  },\r\n};\r\n\r\nexport const SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID =\r\n  new anchor.web3.PublicKey('ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL');\r\n\r\nexport const CIVIC = new anchor.web3.PublicKey(\r\n  'gatem74V238djXdzWnJf94Wo1DcnuGkfijbf3AuBhfs',\r\n);\r\nexport const getFairLaunchTicketSeqLookup = async (\r\n  tokenMint: anchor.web3.PublicKey,\r\n  seq: anchor.BN,\r\n): Promise<[anchor.web3.PublicKey, number]> => {\r\n  return await anchor.web3.PublicKey.findProgramAddress(\r\n    [\r\n      Buffer.from('fair_launch'),\r\n      tokenMint.toBuffer(),\r\n      seq.toArrayLike(Buffer, 'le', 8),\r\n    ],\r\n    FAIR_LAUNCH_PROGRAM_ID,\r\n  );\r\n};\r\n\r\nexport const getAtaForMint = async (\r\n  mint: anchor.web3.PublicKey,\r\n  buyer: anchor.web3.PublicKey,\r\n): Promise<[anchor.web3.PublicKey, number]> => {\r\n  return await anchor.web3.PublicKey.findProgramAddress(\r\n    [buyer.toBuffer(), TOKEN_PROGRAM_ID.toBuffer(), mint.toBuffer()],\r\n    SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\r\n  );\r\n};\r\n\r\nexport const getNetworkExpire = async (\r\n  gatekeeperNetwork: anchor.web3.PublicKey,\r\n): Promise<[anchor.web3.PublicKey, number]> => {\r\n  return await anchor.web3.PublicKey.findProgramAddress(\r\n    [gatekeeperNetwork.toBuffer(), Buffer.from('expire')],\r\n    CIVIC,\r\n  );\r\n};\r\n\r\nexport const getNetworkToken = async (\r\n  wallet: anchor.web3.PublicKey,\r\n  gatekeeperNetwork: anchor.web3.PublicKey,\r\n): Promise<[anchor.web3.PublicKey, number]> => {\r\n  return await anchor.web3.PublicKey.findProgramAddress(\r\n    [\r\n      wallet.toBuffer(),\r\n      Buffer.from('gateway'),\r\n      Buffer.from([0, 0, 0, 0, 0, 0, 0, 0]),\r\n      gatekeeperNetwork.toBuffer(),\r\n    ],\r\n    CIVIC,\r\n  );\r\n};\r\n\r\nexport const getFairLaunchTicket = async (\r\n  tokenMint: anchor.web3.PublicKey,\r\n  buyer: anchor.web3.PublicKey,\r\n): Promise<[anchor.web3.PublicKey, number]> => {\r\n  return await anchor.web3.PublicKey.findProgramAddress(\r\n    [Buffer.from('fair_launch'), tokenMint.toBuffer(), buyer.toBuffer()],\r\n    FAIR_LAUNCH_PROGRAM_ID,\r\n  );\r\n};\r\n\r\nexport function createAssociatedTokenAccountInstruction(\r\n  associatedTokenAddress: anchor.web3.PublicKey,\r\n  payer: anchor.web3.PublicKey,\r\n  walletAddress: anchor.web3.PublicKey,\r\n  splTokenMintAddress: anchor.web3.PublicKey,\r\n) {\r\n  const keys = [\r\n    {\r\n      pubkey: payer,\r\n      isSigner: true,\r\n      isWritable: true,\r\n    },\r\n    {\r\n      pubkey: associatedTokenAddress,\r\n      isSigner: false,\r\n      isWritable: true,\r\n    },\r\n    {\r\n      pubkey: walletAddress,\r\n      isSigner: false,\r\n      isWritable: false,\r\n    },\r\n    {\r\n      pubkey: splTokenMintAddress,\r\n      isSigner: false,\r\n      isWritable: false,\r\n    },\r\n    {\r\n      pubkey: SystemProgram.programId,\r\n      isSigner: false,\r\n      isWritable: false,\r\n    },\r\n    {\r\n      pubkey: TOKEN_PROGRAM_ID,\r\n      isSigner: false,\r\n      isWritable: false,\r\n    },\r\n    {\r\n      pubkey: SYSVAR_RENT_PUBKEY,\r\n      isSigner: false,\r\n      isWritable: false,\r\n    },\r\n  ];\r\n  return new TransactionInstruction({\r\n    keys,\r\n    programId: SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\r\n    data: Buffer.from([]),\r\n  });\r\n}\r\n","import * as anchor from '@project-serum/anchor';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { PhaseCountdown } from './countdown';\r\nimport { toDate } from './utils';\r\nimport { FairLaunchAccount } from './fair-launch';\r\nimport { CandyMachineAccount } from './candy-machine';\r\nimport { useWallet } from '@solana/wallet-adapter-react';\r\n\r\nexport enum Phase {\r\n  AnticipationPhase, // FL, AKA Phase 0\r\n  SetPrice, // FL, AKA Phase 1\r\n  GracePeriod, // FL, AKA Phase 2\r\n  Lottery, // FL\r\n  RaffleFinished, // FL, AKA Phase 3\r\n  WaitForCM, // FL,\r\n  Phase4,\r\n  Unknown,\r\n}\r\n\r\nexport function getPhase(\r\n  fairLaunch: FairLaunchAccount | undefined,\r\n  candyMachine: CandyMachineAccount | undefined,\r\n): Phase {\r\n  const curr = new Date().getTime();\r\n  const phaseOne = toDate(fairLaunch?.state.data.phaseOneStart)?.getTime();\r\n  const phaseOneEnd = toDate(fairLaunch?.state.data.phaseOneEnd)?.getTime();\r\n  const phaseTwoEnd = toDate(fairLaunch?.state.data.phaseTwoEnd)?.getTime();\r\n  const candyMachineGoLive = toDate(candyMachine?.state.goLiveDate)?.getTime();\r\n\r\n  if (phaseOne && curr < phaseOne) {\r\n    return Phase.AnticipationPhase;\r\n  } else if (phaseOneEnd && curr <= phaseOneEnd) {\r\n    return Phase.SetPrice;\r\n  } else if (phaseTwoEnd && curr <= phaseTwoEnd) {\r\n    return Phase.GracePeriod;\r\n  } else if (\r\n    !fairLaunch?.state.phaseThreeStarted &&\r\n    phaseTwoEnd &&\r\n    curr > phaseTwoEnd\r\n  ) {\r\n    return Phase.Lottery;\r\n  } else if (\r\n    (!fairLaunch || fairLaunch?.state.phaseThreeStarted) &&\r\n    candyMachineGoLive &&\r\n    curr > candyMachineGoLive\r\n  ) {\r\n    return Phase.Phase4;\r\n  } else if (fairLaunch?.state.phaseThreeStarted) {\r\n    if (!candyMachine) {\r\n      return Phase.RaffleFinished;\r\n    } else {\r\n      return Phase.WaitForCM;\r\n    }\r\n  }\r\n  return Phase.Unknown;\r\n}\r\n\r\nconst Header = (props: {\r\n  phaseName: string;\r\n  desc: string;\r\n  date: anchor.BN | undefined;\r\n  status?: string;\r\n}) => {\r\n  const { phaseName, desc, date, status } = props;\r\n  return (\r\n    <Grid container justifyContent=\"center\">\r\n      <Grid xs={6} justifyContent=\"center\" direction=\"column\">\r\n        <Typography variant=\"h5\" style={{ fontWeight: 600 }}>\r\n          {phaseName}\r\n        </Typography>\r\n        <Typography variant=\"body1\" color=\"textSecondary\">\r\n          {desc}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid xs={6} container justifyContent=\"flex-end\">\r\n        <PhaseCountdown\r\n          date={toDate(date)}\r\n          style={{ justifyContent: 'flex-end' }}\r\n          status={status || 'COMPLETE'}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\ntype PhaseHeaderProps = {\r\n  phase: Phase;\r\n  fairLaunch?: FairLaunchAccount;\r\n  candyMachine?: CandyMachineAccount;\r\n  candyMachinePredatesFairLaunch: boolean;\r\n  rpcUrl: string;\r\n};\r\n\r\nexport const PhaseHeader = ({\r\n  phase,\r\n  fairLaunch,\r\n  candyMachine,\r\n  candyMachinePredatesFairLaunch,\r\n  rpcUrl,\r\n}: PhaseHeaderProps) => {\r\n  const wallet = useWallet();\r\n  console.log('D', candyMachine);\r\n  console.log('Wallet', wallet);\r\n\r\n  return (\r\n    <>\r\n      {phase === Phase.AnticipationPhase && (\r\n        <Header\r\n          phaseName={'Phase 0'}\r\n          desc={'Anticipation Phase'}\r\n          date={fairLaunch?.state.data.phaseOneStart}\r\n        />\r\n      )}\r\n      {phase === Phase.SetPrice && (\r\n        <Header\r\n          phaseName={'Phase 1'}\r\n          desc={'Set price phase'}\r\n          date={fairLaunch?.state.data.phaseOneEnd}\r\n        />\r\n      )}\r\n\r\n      {phase === Phase.GracePeriod && (\r\n        <Header\r\n          phaseName={'Phase 2'}\r\n          desc={'Grace period'}\r\n          date={fairLaunch?.state.data.phaseTwoEnd}\r\n        />\r\n      )}\r\n\r\n      {phase === Phase.Lottery && (\r\n        <Header\r\n          phaseName={'Phase 3'}\r\n          desc={'Raffle in progress'}\r\n          date={fairLaunch?.state.data.phaseTwoEnd.add(\r\n            fairLaunch?.state.data.lotteryDuration,\r\n          )}\r\n        />\r\n      )}\r\n\r\n      {phase === Phase.RaffleFinished && (\r\n        <Header\r\n          phaseName={'Phase 3'}\r\n          desc={'Raffle finished!'}\r\n          date={fairLaunch?.state.data.phaseTwoEnd}\r\n        />\r\n      )}\r\n\r\n      {phase === Phase.WaitForCM && (\r\n        <Header\r\n          phaseName={'Phase 3'}\r\n          desc={'Minting starts in...'}\r\n          date={candyMachine?.state.goLiveDate}\r\n        />\r\n      )}\r\n\r\n      {phase === Phase.Unknown && !candyMachine && (\r\n        <Header\r\n          phaseName={'Loading...'}\r\n          desc={'Waiting for you to connect your wallet.'}\r\n          date={undefined}\r\n        />\r\n      )}\r\n\r\n      {phase === Phase.Phase4 && (\r\n        <Header\r\n          phaseName={candyMachinePredatesFairLaunch ? 'Phase 3' : 'Phase 4'}\r\n          desc={'Candy Time 🍬 🍬 🍬'}\r\n          date={candyMachine?.state.goLiveDate}\r\n          status=\"LIVE\"\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\nimport Button from '@material-ui/core/Button';\r\nimport { CandyMachineAccount } from './candy-machine';\r\nimport { FairLaunchAccount } from './fair-launch';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { GatewayStatus, useGateway } from '@civic/solana-gateway-react';\r\nimport { useEffect, useState } from 'react';\r\n\r\nexport const CTAButton = styled(Button)`\r\n  width: 100%;\r\n  height: 60px;\r\n  margin-top: 10px;\r\n  margin-bottom: 5px;\r\n  background: linear-gradient(180deg, #604ae5 0%, #813eee 100%);\r\n  color: white;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n`; // add your styles here\r\n\r\nexport const MintButton = ({\r\n  onMint,\r\n  candyMachine,\r\n  fairLaunch,\r\n  isMinting,\r\n  fairLaunchBalance,\r\n}: {\r\n  onMint: () => Promise<void>;\r\n  candyMachine: CandyMachineAccount | undefined;\r\n  fairLaunch?: FairLaunchAccount | undefined;\r\n  isMinting: boolean;\r\n  fairLaunchBalance: number;\r\n}) => {\r\n  const { requestGatewayToken, gatewayStatus } = useGateway();\r\n  const [clicked, setClicked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (gatewayStatus === GatewayStatus.ACTIVE && clicked) {\r\n      console.log('Minting');\r\n      onMint();\r\n      setClicked(false);\r\n    }\r\n  }, [gatewayStatus, clicked, setClicked, onMint]);\r\n  return (\r\n    <CTAButton\r\n      disabled={\r\n        candyMachine?.state.isSoldOut ||\r\n        isMinting ||\r\n        !candyMachine?.state.isActive ||\r\n        (fairLaunch?.ticket?.data?.state.punched && fairLaunchBalance === 0)\r\n      }\r\n      onClick={async () => {\r\n        setClicked(true);\r\n        if (candyMachine?.state.isActive && candyMachine?.state.gatekeeper) {\r\n          if (gatewayStatus === GatewayStatus.ACTIVE) {\r\n            setClicked(true);\r\n          } else {\r\n            await requestGatewayToken();\r\n          }\r\n        } else {\r\n          await onMint();\r\n          setClicked(false);\r\n        }\r\n      }}\r\n      variant=\"contained\"\r\n    >\r\n      {fairLaunch?.ticket?.data?.state.punched && fairLaunchBalance === 0 ? (\r\n        'MINTED'\r\n      ) : candyMachine?.state.isSoldOut ? (\r\n        'SOLD OUT'\r\n      ) : isMinting ? (\r\n        <CircularProgress />\r\n      ) : (\r\n        'MINT'\r\n      )}\r\n    </CTAButton>\r\n  );\r\n};\r\n","import { CircularProgress, Container, Link } from '@material-ui/core';\r\nimport { useState } from 'react';\r\nimport { FairLaunchAccount, receiveRefund } from './fair-launch';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport { LAMPORTS_PER_SOL } from '@solana/web3.js';\r\nimport { toDate } from './utils';\r\nimport Countdown from 'react-countdown';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport { CTAButton } from './MintButton';\r\nimport { AlertState } from './utils';\r\n\r\nimport * as anchor from '@project-serum/anchor';\r\n\r\ntype AntiRugProps = {\r\n  fairLaunch: FairLaunchAccount;\r\n  isMinting: [boolean, (val: boolean) => void];\r\n  anchorWallet?: anchor.Wallet;\r\n  setAlertState: (val: AlertState) => void;\r\n};\r\nexport const AntiRug = ({\r\n  fairLaunch,\r\n  isMinting: [isMinting, setIsMinting],\r\n  anchorWallet,\r\n  setAlertState,\r\n}: AntiRugProps) => {\r\n  const [antiRugPolicyOpen, setAnitRugPolicyOpen] = useState(false);\r\n\r\n  const onRugRefund = async () => {\r\n    if (!anchorWallet) {\r\n      return;\r\n    }\r\n\r\n    console.log('refund');\r\n    try {\r\n      setIsMinting(true);\r\n      await receiveRefund(anchorWallet, fairLaunch);\r\n      setIsMinting(false);\r\n      setAlertState({\r\n        open: true,\r\n        message:\r\n          'Congratulations! You have received a refund. This is an irreversible action.',\r\n        severity: 'success',\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n      setIsMinting(false);\r\n      setAlertState({\r\n        open: true,\r\n        message: 'Something went wrong.',\r\n        severity: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container maxWidth=\"xs\" style={{ position: 'relative' }}>\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            justifyContent: 'flex-end',\r\n          }}\r\n        >\r\n          <Link\r\n            component=\"button\"\r\n            variant=\"body2\"\r\n            color=\"textSecondary\"\r\n            align=\"right\"\r\n            onClick={() => {\r\n              setAnitRugPolicyOpen(true);\r\n            }}\r\n          >\r\n            Anti-Rug Policy\r\n          </Link>\r\n        </div>\r\n      </Container>\r\n      <Dialog\r\n        open={antiRugPolicyOpen}\r\n        onClose={() => {\r\n          setAnitRugPolicyOpen(false);\r\n        }}\r\n        PaperProps={{\r\n          style: { backgroundColor: '#222933', borderRadius: 6 },\r\n        }}\r\n      >\r\n        <MuiDialogContent style={{ padding: 24 }}>\r\n          {!fairLaunch.state.data.antiRugSetting && (\r\n            <span>This Fair Launch has no anti-rug settings.</span>\r\n          )}\r\n          {fairLaunch.state.data.antiRugSetting &&\r\n            fairLaunch.state.data.antiRugSetting.selfDestructDate && (\r\n              <div>\r\n                <h3>Anti-Rug Policy</h3>\r\n                <p>\r\n                  This raffle is governed by a smart contract to prevent the\r\n                  artist from running away with your money.\r\n                </p>\r\n                <p>How it works:</p>\r\n                This project will retain{' '}\r\n                {fairLaunch.state.data.antiRugSetting.reserveBp / 100}% (◎{' '}\r\n                {(fairLaunch.treasury *\r\n                  fairLaunch.state.data.antiRugSetting.reserveBp) /\r\n                  (LAMPORTS_PER_SOL * 10000)}\r\n                ) of the pledged amount in a locked state until all but{' '}\r\n                {fairLaunch.state.data.antiRugSetting.tokenRequirement.toNumber()}{' '}\r\n                NFTs (out of up to{' '}\r\n                {fairLaunch.state.data.numberOfTokens.toNumber()}) have been\r\n                minted.\r\n                <p>\r\n                  If more than{' '}\r\n                  {fairLaunch.state.data.antiRugSetting.tokenRequirement.toNumber()}{' '}\r\n                  NFTs remain as of{' '}\r\n                  {toDate(\r\n                    fairLaunch.state.data.antiRugSetting.selfDestructDate,\r\n                  )?.toLocaleDateString()}{' '}\r\n                  at{' '}\r\n                  {toDate(\r\n                    fairLaunch.state.data.antiRugSetting.selfDestructDate,\r\n                  )?.toLocaleTimeString()}\r\n                  , you will have the option to get a refund of{' '}\r\n                  {fairLaunch.state.data.antiRugSetting.reserveBp / 100}% of the\r\n                  cost of your token.\r\n                </p>\r\n                {fairLaunch.ticket?.data &&\r\n                  !fairLaunch.ticket?.data.state.withdrawn && (\r\n                    <CTAButton\r\n                      onClick={onRugRefund}\r\n                      variant=\"contained\"\r\n                      disabled={\r\n                        !!!fairLaunch.ticket.data ||\r\n                        !fairLaunch.ticket.data.state.punched ||\r\n                        Date.now() / 1000 <\r\n                          fairLaunch.state.data.antiRugSetting.selfDestructDate.toNumber()\r\n                      }\r\n                    >\r\n                      {isMinting ? (\r\n                        <CircularProgress />\r\n                      ) : Date.now() / 1000 <\r\n                        fairLaunch.state.data.antiRugSetting.selfDestructDate.toNumber() ? (\r\n                        <span>\r\n                          Refund in...\r\n                          <Countdown\r\n                            date={toDate(\r\n                              fairLaunch.state.data.antiRugSetting\r\n                                .selfDestructDate,\r\n                            )}\r\n                          />\r\n                        </span>\r\n                      ) : (\r\n                        'Refund'\r\n                      )}\r\n                      {}\r\n                    </CTAButton>\r\n                  )}\r\n                <div style={{ textAlign: 'center', marginTop: '-5px' }}>\r\n                  {fairLaunch.ticket?.data &&\r\n                    !fairLaunch.ticket?.data?.state.punched && (\r\n                      <small>\r\n                        You currently have a ticket but it has not been punched\r\n                        yet, so cannot be refunded.\r\n                      </small>\r\n                    )}\r\n                </div>\r\n              </div>\r\n            )}\r\n        </MuiDialogContent>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n","import { Paper } from '@material-ui/core';\r\nimport Countdown from 'react-countdown';\r\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport { useState } from 'react';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n      padding: theme.spacing(0),\r\n      '& > *': {\r\n        margin: theme.spacing(0.5),\r\n        marginRight: 0,\r\n        width: theme.spacing(6),\r\n        height: theme.spacing(6),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignContent: 'center',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        background: '#384457',\r\n        color: 'white',\r\n        borderRadius: 5,\r\n        fontSize: 10,\r\n      },\r\n    },\r\n    done: {\r\n      display: 'flex',\r\n      margin: theme.spacing(1),\r\n      marginRight: 0,\r\n      padding: theme.spacing(1),\r\n      flexDirection: 'column',\r\n      alignContent: 'center',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      background: '#384457',\r\n      color: 'white',\r\n      borderRadius: 5,\r\n      fontWeight: 'bold',\r\n      fontSize: 18,\r\n    },\r\n    item: {\r\n      fontWeight: 'bold',\r\n      fontSize: 18,\r\n    }\r\n  }),\r\n);\r\n\r\n\r\ninterface PhaseCountdownProps {\r\n  date: Date | undefined;\r\n  style?: React.CSSProperties;\r\n  status?: string;\r\n  onComplete?: () => void;\r\n  start?: Date;\r\n  end?: Date;\r\n}\r\n\r\ninterface CountdownRender {\r\n  days: number;\r\n  hours: number;\r\n  minutes: number;\r\n  seconds: number;\r\n  completed: boolean;\r\n}\r\n\r\nexport const PhaseCountdown: React.FC<PhaseCountdownProps> = ({\r\n  date,\r\n  status,\r\n  style,\r\n  start,\r\n  end,\r\n  onComplete,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const [isFixed, setIsFixed] = useState(start && end && date ? start.getTime() - Date.now() < 0 : false);\r\n\r\n  const renderCountdown = ({ days, hours, minutes, seconds, completed }: CountdownRender) => {\r\n    hours += days * 24\r\n    if (completed) {\r\n      return status ? <span className={classes.done}  >{status}</span> : null;\r\n    } else {\r\n      return (\r\n        <div className={classes.root} style={style} >\r\n          {isFixed && <Paper elevation={0}>\r\n            <span className={classes.item}>\r\n              +\r\n            </span>\r\n          </Paper>}\r\n          <Paper elevation={0}>\r\n            <span className={classes.item}>\r\n              {hours < 10 ? `0${hours}` : hours}\r\n            </span>\r\n            <span>hrs</span>\r\n          </Paper>\r\n          <Paper elevation={0}>\r\n            <span className={classes.item}>\r\n              {minutes < 10 ? `0${minutes}` : minutes}\r\n            </span>\r\n            <span>mins</span>\r\n          </Paper>\r\n          <Paper elevation={0}>\r\n            <span className={classes.item}>\r\n              {seconds < 10 ? `0${seconds}` : seconds}\r\n            </span>\r\n            <span>secs</span>\r\n          </Paper>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  if (date && start && end) {\r\n    if (isFixed) {\r\n      <Countdown\r\n        date={start}\r\n        now={() => end.getTime()}\r\n        onComplete={() => setIsFixed(false)}\r\n        renderer={renderCountdown}\r\n      />\r\n    }\r\n  }\r\n\r\n  if (date) {\r\n    return (\r\n      <Countdown\r\n        date={date}\r\n        onComplete={onComplete}\r\n        renderer={renderCountdown}\r\n      />\r\n    )\r\n  } else {\r\n    return null\r\n  }\r\n}\r\n","import { useEffect, useMemo, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport {\r\n  CircularProgress,\r\n  Container,\r\n  IconButton,\r\n  Link,\r\n  Slider,\r\n  Snackbar,\r\n} from '@material-ui/core';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { createStyles, Theme } from '@material-ui/core/styles';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nimport * as anchor from '@project-serum/anchor';\r\n\r\nimport { LAMPORTS_PER_SOL, PublicKey } from '@solana/web3.js';\r\n\r\nimport { useWallet } from '@solana/wallet-adapter-react';\r\nimport { WalletDialogButton } from '@solana/wallet-adapter-material-ui';\r\n\r\nimport {\r\n  awaitTransactionSignatureConfirmation,\r\n  CandyMachineAccount,\r\n  CANDY_MACHINE_PROGRAM,\r\n  getCandyMachineState,\r\n  mintOneToken,\r\n} from './candy-machine';\r\n\r\nimport {\r\n  FairLaunchAccount,\r\n  getFairLaunchState,\r\n  punchTicket,\r\n  purchaseTicket,\r\n} from './fair-launch';\r\n\r\nimport { AlertState, formatNumber, getAtaForMint, toDate } from './utils';\r\nimport { CTAButton, MintButton } from './MintButton';\r\nimport { AntiRug } from './AntiRug';\r\nimport { getPhase, Phase, PhaseHeader } from './PhaseHeader';\r\nimport { GatewayProvider } from '@civic/solana-gateway-react';\r\n\r\nconst ConnectButton = styled(WalletDialogButton)`\r\n  width: 100%;\r\n  height: 60px;\r\n  margin-top: 10px;\r\n  margin-bottom: 5px;\r\n  background: linear-gradient(180deg, #604ae5 0%, #813eee 100%);\r\n  color: white;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst MintContainer = styled.div``; // add your styles here\r\n\r\nconst dialogStyles: any = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      margin: 0,\r\n      padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n      position: 'absolute',\r\n      right: theme.spacing(1),\r\n      top: theme.spacing(1),\r\n      color: theme.palette.grey[500],\r\n    },\r\n  });\r\n\r\nconst ValueSlider = styled(Slider)({\r\n  color: '#C0D5FE',\r\n  height: 8,\r\n  '& > *': {\r\n    height: 4,\r\n  },\r\n  '& .MuiSlider-track': {\r\n    border: 'none',\r\n    height: 4,\r\n  },\r\n  '& .MuiSlider-thumb': {\r\n    height: 24,\r\n    width: 24,\r\n    marginTop: -10,\r\n    background: 'linear-gradient(180deg, #604AE5 0%, #813EEE 100%)',\r\n    border: '2px solid currentColor',\r\n    '&:focus, &:hover, &.Mui-active, &.Mui-focusVisible': {\r\n      boxShadow: 'inherit',\r\n    },\r\n    '&:before': {\r\n      display: 'none',\r\n    },\r\n  },\r\n  '& .MuiSlider-valueLabel': {\r\n    '& > *': {\r\n      background: 'linear-gradient(180deg, #604AE5 0%, #813EEE 100%)',\r\n    },\r\n    lineHeight: 1.2,\r\n    fontSize: 12,\r\n    padding: 0,\r\n    width: 32,\r\n    height: 32,\r\n    marginLeft: 9,\r\n  },\r\n});\r\n\r\nexport interface HomeProps {\r\n  candyMachineId?: anchor.web3.PublicKey;\r\n  fairLaunchId?: anchor.web3.PublicKey;\r\n  connection: anchor.web3.Connection;\r\n  startDate: number;\r\n  txTimeout: number;\r\n  rpcHost: string;\r\n}\r\n\r\nconst FAIR_LAUNCH_LOTTERY_SIZE =\r\n  8 + // discriminator\r\n  32 + // fair launch\r\n  1 + // bump\r\n  8; // size of bitmask ones\r\n\r\nconst isWinner = (fairLaunch: FairLaunchAccount | undefined): boolean => {\r\n  if (\r\n    !fairLaunch?.lottery.data ||\r\n    !fairLaunch?.lottery.data.length ||\r\n    !fairLaunch?.ticket.data?.seq ||\r\n    !fairLaunch?.state.phaseThreeStarted\r\n  ) {\r\n    return false;\r\n  }\r\n\r\n  const myByte =\r\n    fairLaunch.lottery.data[\r\n      FAIR_LAUNCH_LOTTERY_SIZE +\r\n        Math.floor(fairLaunch.ticket.data?.seq.toNumber() / 8)\r\n    ];\r\n\r\n  const positionFromRight = 7 - (fairLaunch.ticket.data?.seq.toNumber() % 8);\r\n  const mask = Math.pow(2, positionFromRight);\r\n  const isWinner = myByte & mask;\r\n  return isWinner > 0;\r\n};\r\n\r\nconst Home = (props: HomeProps) => {\r\n  const [fairLaunchBalance, setFairLaunchBalance] = useState<number>(0);\r\n  const [yourSOLBalance, setYourSOLBalance] = useState<number | null>(null);\r\n  const rpcUrl = props.rpcHost;\r\n\r\n  const [isMinting, setIsMinting] = useState(false); // true when user got to press MINT\r\n  const [contributed, setContributed] = useState(0);\r\n\r\n  const wallet = useWallet();\r\n\r\n  const anchorWallet = useMemo(() => {\r\n    if (\r\n      !wallet ||\r\n      !wallet.publicKey ||\r\n      !wallet.signAllTransactions ||\r\n      !wallet.signTransaction\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    return {\r\n      publicKey: wallet.publicKey,\r\n      signAllTransactions: wallet.signAllTransactions,\r\n      signTransaction: wallet.signTransaction,\r\n    } as anchor.Wallet;\r\n  }, [wallet]);\r\n\r\n  const [alertState, setAlertState] = useState<AlertState>({\r\n    open: false,\r\n    message: '',\r\n    severity: undefined,\r\n  });\r\n\r\n  const [fairLaunch, setFairLaunch] = useState<FairLaunchAccount>();\r\n  const [candyMachine, setCandyMachine] = useState<CandyMachineAccount>();\r\n  const [howToOpen, setHowToOpen] = useState(false);\r\n  const [refundExplainerOpen, setRefundExplainerOpen] = useState(false);\r\n\r\n  const onMint = async () => {\r\n    try {\r\n      setIsMinting(true);\r\n      document.getElementById('#identity')?.click();\r\n      if (wallet.connected && candyMachine?.program && wallet.publicKey) {\r\n        if (fairLaunch?.ticket.data?.state.unpunched && isWinner(fairLaunch)) {\r\n          await onPunchTicket();\r\n        }\r\n\r\n        const mintTxId = (\r\n          await mintOneToken(candyMachine, wallet.publicKey)\r\n        )[0];\r\n\r\n        let status: any = { err: true };\r\n        if (mintTxId) {\r\n          status = await awaitTransactionSignatureConfirmation(\r\n            mintTxId,\r\n            props.txTimeout,\r\n            props.connection,\r\n            'singleGossip',\r\n            true,\r\n          );\r\n        }\r\n\r\n        if (!status?.err) {\r\n          setAlertState({\r\n            open: true,\r\n            message: 'Congratulations! Mint succeeded!',\r\n            severity: 'success',\r\n          });\r\n        } else {\r\n          setAlertState({\r\n            open: true,\r\n            message: 'Mint failed! Please try again!',\r\n            severity: 'error',\r\n          });\r\n        }\r\n      }\r\n    } catch (error: any) {\r\n      // TODO: blech:\r\n      let message = error.msg || 'Minting failed! Please try again!';\r\n      if (!error.msg) {\r\n        if (!error.message) {\r\n          message = 'Transaction Timeout! Please try again.';\r\n        } else if (error.message.indexOf('0x138')) {\r\n        } else if (error.message.indexOf('0x137')) {\r\n          message = `SOLD OUT!`;\r\n        } else if (error.message.indexOf('0x135')) {\r\n          message = `Insufficient funds to mint. Please fund your wallet.`;\r\n        }\r\n      } else {\r\n        if (error.code === 311) {\r\n          message = `SOLD OUT!`;\r\n          window.location.reload();\r\n        } else if (error.code === 312) {\r\n          message = `Minting period hasn't started yet.`;\r\n        }\r\n      }\r\n\r\n      setAlertState({\r\n        open: true,\r\n        message,\r\n        severity: 'error',\r\n      });\r\n    } finally {\r\n      setIsMinting(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (!anchorWallet) {\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const balance = await props.connection.getBalance(\r\n          anchorWallet.publicKey,\r\n        );\r\n        setYourSOLBalance(balance);\r\n\r\n        if (props.fairLaunchId) {\r\n          const state = await getFairLaunchState(\r\n            anchorWallet,\r\n            props.fairLaunchId,\r\n            props.connection,\r\n          );\r\n\r\n          setFairLaunch(state);\r\n\r\n          try {\r\n            if (state.state.tokenMint) {\r\n              const fairLaunchBalance =\r\n                await props.connection.getTokenAccountBalance(\r\n                  (\r\n                    await getAtaForMint(\r\n                      state.state.tokenMint,\r\n                      anchorWallet.publicKey,\r\n                    )\r\n                  )[0],\r\n                );\r\n\r\n              if (fairLaunchBalance.value) {\r\n                setFairLaunchBalance(fairLaunchBalance.value.uiAmount || 0);\r\n              }\r\n            }\r\n          } catch (e) {\r\n            console.log('Problem getting fair launch token balance');\r\n            console.log(e);\r\n          }\r\n          if (contributed === 0) {\r\n            const phase = getPhase(state, undefined);\r\n\r\n            if (phase === Phase.SetPrice) {\r\n              const ticks =\r\n                (state.state.data.priceRangeEnd.toNumber() -\r\n                  state.state.data.priceRangeStart.toNumber()) /\r\n                state.state.data.tickSize.toNumber();\r\n              const randomTick = Math.round(Math.random() * ticks);\r\n\r\n              setContributed(\r\n                (state.state.data.priceRangeStart.toNumber() +\r\n                  randomTick * state.state.data.tickSize.toNumber()) /\r\n                  LAMPORTS_PER_SOL,\r\n              );\r\n            } else {\r\n              setContributed(\r\n                (\r\n                  state.state.currentMedian || state.state.data.priceRangeStart\r\n                ).toNumber() / LAMPORTS_PER_SOL,\r\n              );\r\n            }\r\n          }\r\n        } else {\r\n          console.log('No fair launch detected in configuration.');\r\n        }\r\n      } catch (e) {\r\n        console.log('Problem getting fair launch state');\r\n        console.log(e);\r\n      }\r\n      if (props.candyMachineId) {\r\n        try {\r\n          const cndy = await getCandyMachineState(\r\n            anchorWallet,\r\n            props.candyMachineId,\r\n            props.connection,\r\n          );\r\n          setCandyMachine(cndy);\r\n        } catch (e) {\r\n          console.log('Problem getting candy machine state');\r\n          console.log(e);\r\n        }\r\n      } else {\r\n        console.log('No candy machine detected in configuration.');\r\n      }\r\n    })();\r\n  }, [\r\n    anchorWallet,\r\n    props.candyMachineId,\r\n    props.connection,\r\n    props.fairLaunchId,\r\n    contributed,\r\n  ]);\r\n\r\n  const min = formatNumber.asNumber(fairLaunch?.state.data.priceRangeStart);\r\n  const max = formatNumber.asNumber(fairLaunch?.state.data.priceRangeEnd);\r\n  const step = formatNumber.asNumber(fairLaunch?.state.data.tickSize);\r\n  const median = formatNumber.asNumber(fairLaunch?.state.currentMedian);\r\n  const phase = getPhase(fairLaunch, candyMachine);\r\n  console.log('Phase', phase);\r\n  const marks = [\r\n    {\r\n      value: min || 0,\r\n      label: `${min} SOL`,\r\n    },\r\n    // TODO:L\r\n    ...(phase === Phase.SetPrice\r\n      ? []\r\n      : [\r\n          {\r\n            value: median || 0,\r\n            label: `${median}`,\r\n          },\r\n        ]),\r\n    // display user comitted value\r\n    // {\r\n    //   value: 37,\r\n    //   label: '37°C',\r\n    // },\r\n    {\r\n      value: max || 0,\r\n      label: `${max} SOL`,\r\n    },\r\n  ].filter(_ => _ !== undefined && _.value !== 0) as any;\r\n\r\n  const onDeposit = async () => {\r\n    if (!anchorWallet) {\r\n      return;\r\n    }\r\n\r\n    console.log('deposit');\r\n    setIsMinting(true);\r\n    try {\r\n      await purchaseTicket(contributed, anchorWallet, fairLaunch);\r\n      setIsMinting(false);\r\n      setAlertState({\r\n        open: true,\r\n        message: `Congratulations! Bid ${\r\n          fairLaunch?.ticket.data ? 'updated' : 'inserted'\r\n        }!`,\r\n        severity: 'success',\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n      setIsMinting(false);\r\n      setAlertState({\r\n        open: true,\r\n        message: 'Something went wrong.',\r\n        severity: 'error',\r\n      });\r\n    }\r\n  };\r\n  const onRefundTicket = async () => {\r\n    if (!anchorWallet) {\r\n      return;\r\n    }\r\n\r\n    console.log('refund');\r\n    try {\r\n      setIsMinting(true);\r\n      await purchaseTicket(0, anchorWallet, fairLaunch);\r\n      setIsMinting(false);\r\n      setAlertState({\r\n        open: true,\r\n        message:\r\n          'Congratulations! Funds withdrawn. This is an irreversible action.',\r\n        severity: 'success',\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n      setIsMinting(false);\r\n      setAlertState({\r\n        open: true,\r\n        message: 'Something went wrong.',\r\n        severity: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  const onPunchTicket = async () => {\r\n    if (!anchorWallet || !fairLaunch || !fairLaunch.ticket) {\r\n      return;\r\n    }\r\n\r\n    console.log('punch');\r\n    setIsMinting(true);\r\n    try {\r\n      await punchTicket(anchorWallet, fairLaunch);\r\n      setIsMinting(false);\r\n      setAlertState({\r\n        open: true,\r\n        message: 'Congratulations! Ticket punched!',\r\n        severity: 'success',\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n      setIsMinting(false);\r\n      setAlertState({\r\n        open: true,\r\n        message: 'Something went wrong.',\r\n        severity: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  const candyMachinePredatesFairLaunch =\r\n    candyMachine?.state.goLiveDate &&\r\n    fairLaunch?.state.data.phaseTwoEnd &&\r\n    candyMachine?.state.goLiveDate.lt(fairLaunch?.state.data.phaseTwoEnd);\r\n\r\n  const notEnoughSOL = !!(\r\n    yourSOLBalance != null &&\r\n    fairLaunch?.state.data.priceRangeStart &&\r\n    fairLaunch?.state.data.fee &&\r\n    yourSOLBalance + (fairLaunch?.ticket?.data?.amount.toNumber() || 0) <\r\n      contributed * LAMPORTS_PER_SOL +\r\n        fairLaunch?.state.data.fee.toNumber() +\r\n        0.01\r\n  );\r\n\r\n  return (\r\n    <Container style={{ marginTop: 100 }}>\r\n      {fairLaunch && (\r\n        <AntiRug\r\n          fairLaunch={fairLaunch}\r\n          isMinting={[isMinting, setIsMinting]}\r\n          setAlertState={setAlertState}\r\n        />\r\n      )}\r\n      <Container maxWidth=\"xs\" style={{ position: 'relative' }}>\r\n        <Paper\r\n          style={{ padding: 24, backgroundColor: '#151A1F', borderRadius: 6 }}\r\n        >\r\n          <Grid container justifyContent=\"center\" direction=\"column\">\r\n            <PhaseHeader\r\n              phase={phase}\r\n              fairLaunch={fairLaunch}\r\n              candyMachine={candyMachine}\r\n              rpcUrl={rpcUrl}\r\n              candyMachinePredatesFairLaunch={!!candyMachinePredatesFairLaunch}\r\n            />\r\n            {fairLaunch && (\r\n              <Grid\r\n                container\r\n                direction=\"column\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                style={{\r\n                  height: 200,\r\n                  marginTop: 20,\r\n                  marginBottom: 20,\r\n                  background: '#384457',\r\n                  borderRadius: 6,\r\n                }}\r\n              >\r\n                {fairLaunch.ticket.data ? (\r\n                  <>\r\n                    <Typography>Your bid</Typography>\r\n                    <Typography variant=\"h6\" style={{ fontWeight: 900 }}>\r\n                      {formatNumber.format(\r\n                        (fairLaunch?.ticket.data?.amount.toNumber() || 0) /\r\n                          LAMPORTS_PER_SOL,\r\n                      )}{' '}\r\n                      SOL\r\n                    </Typography>\r\n                  </>\r\n                ) : [Phase.AnticipationPhase, Phase.SetPrice].includes(\r\n                    phase,\r\n                  ) ? (\r\n                  <Typography>\r\n                    You haven't entered this raffle yet. <br />\r\n                    {fairLaunch?.state?.data?.fee && (\r\n                      <span>\r\n                        <b>\r\n                          All initial bids will incur a ◎{' '}\r\n                          {fairLaunch?.state?.data?.fee.toNumber() /\r\n                            LAMPORTS_PER_SOL}{' '}\r\n                          fee.\r\n                        </b>\r\n                      </span>\r\n                    )}\r\n                  </Typography>\r\n                ) : (\r\n                  <Typography>\r\n                    You didn't participate in this raffle.\r\n                  </Typography>\r\n                )}\r\n              </Grid>\r\n            )}\r\n\r\n            {fairLaunch && (\r\n              <>\r\n                {[\r\n                  Phase.SetPrice,\r\n                  Phase.GracePeriod,\r\n                  Phase.RaffleFinished,\r\n                  Phase.Lottery,\r\n                ].includes(phase) &&\r\n                  fairLaunch?.ticket?.data?.state.withdrawn && (\r\n                    <div style={{ paddingTop: '15px' }}>\r\n                      <Alert severity=\"error\">\r\n                        Your bid was withdrawn and cannot be adjusted or\r\n                        re-inserted.\r\n                      </Alert>\r\n                    </div>\r\n                  )}\r\n                {[Phase.GracePeriod].includes(phase) &&\r\n                  fairLaunch.state.currentMedian &&\r\n                  fairLaunch?.ticket?.data?.amount &&\r\n                  !fairLaunch?.ticket?.data?.state.withdrawn &&\r\n                  fairLaunch.state.currentMedian.gt(\r\n                    fairLaunch?.ticket?.data?.amount,\r\n                  ) && (\r\n                    <div style={{ paddingTop: '15px' }}>\r\n                      <Alert severity=\"warning\">\r\n                        Your bid is currently below the median and will not be\r\n                        eligible for the raffle.\r\n                      </Alert>\r\n                    </div>\r\n                  )}\r\n                {[Phase.RaffleFinished, Phase.Lottery].includes(phase) &&\r\n                  fairLaunch.state.currentMedian &&\r\n                  fairLaunch?.ticket?.data?.amount &&\r\n                  !fairLaunch?.ticket?.data?.state.withdrawn &&\r\n                  fairLaunch.state.currentMedian.gt(\r\n                    fairLaunch?.ticket?.data?.amount,\r\n                  ) && (\r\n                    <div style={{ paddingTop: '15px' }}>\r\n                      <Alert severity=\"error\">\r\n                        Your bid was below the median and was not included in\r\n                        the raffle. You may click <em>Withdraw</em> when the\r\n                        raffle ends or you will be automatically issued one when\r\n                        the Fair Launch authority withdraws from the treasury.\r\n                      </Alert>\r\n                    </div>\r\n                  )}\r\n                {notEnoughSOL && (\r\n                  <Alert severity=\"error\">\r\n                    You do not have enough SOL in your account to place this\r\n                    bid.\r\n                  </Alert>\r\n                )}\r\n              </>\r\n            )}\r\n\r\n            {[Phase.SetPrice, Phase.GracePeriod].includes(phase) && (\r\n              <>\r\n                <Grid style={{ marginTop: 40, marginBottom: 20 }}>\r\n                  {contributed > 0 ? (\r\n                    <ValueSlider\r\n                      min={min}\r\n                      marks={marks}\r\n                      max={max}\r\n                      step={step}\r\n                      value={contributed}\r\n                      onChange={(ev, val) => setContributed(val as any)}\r\n                      valueLabelDisplay=\"auto\"\r\n                      style={{\r\n                        width: 'calc(100% - 40px)',\r\n                        marginLeft: 20,\r\n                        height: 30,\r\n                      }}\r\n                    />\r\n                  ) : (\r\n                    <div\r\n                      style={{\r\n                        display: 'flex',\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                      }}\r\n                    >\r\n                      <CircularProgress />\r\n                    </div>\r\n                  )}\r\n                </Grid>\r\n              </>\r\n            )}\r\n\r\n            {!wallet.connected ? (\r\n              <ConnectButton>\r\n                Connect{' '}\r\n                {[Phase.SetPrice].includes(phase) ? 'to bid' : 'to see status'}\r\n              </ConnectButton>\r\n            ) : (\r\n              <div>\r\n                {[Phase.SetPrice, Phase.GracePeriod].includes(phase) && (\r\n                  <>\r\n                    <CTAButton\r\n                      onClick={onDeposit}\r\n                      variant=\"contained\"\r\n                      disabled={\r\n                        isMinting ||\r\n                        (!fairLaunch?.ticket.data &&\r\n                          phase === Phase.GracePeriod) ||\r\n                        notEnoughSOL\r\n                      }\r\n                    >\r\n                      {isMinting ? (\r\n                        <CircularProgress />\r\n                      ) : !fairLaunch?.ticket.data ? (\r\n                        'Place bid'\r\n                      ) : (\r\n                        'Change bid'\r\n                      )}\r\n                      {}\r\n                    </CTAButton>\r\n                  </>\r\n                )}\r\n\r\n                {[Phase.RaffleFinished].includes(phase) && (\r\n                  <>\r\n                    {isWinner(fairLaunch) && (\r\n                      <CTAButton\r\n                        onClick={onPunchTicket}\r\n                        variant=\"contained\"\r\n                        disabled={\r\n                          fairLaunch?.ticket.data?.state.punched !== undefined\r\n                        }\r\n                      >\r\n                        {isMinting ? <CircularProgress /> : 'Punch Ticket'}\r\n                      </CTAButton>\r\n                    )}\r\n\r\n                    {!isWinner(fairLaunch) && (\r\n                      <CTAButton\r\n                        onClick={onRefundTicket}\r\n                        variant=\"contained\"\r\n                        disabled={\r\n                          isMinting ||\r\n                          fairLaunch?.ticket.data === undefined ||\r\n                          fairLaunch?.ticket.data?.state.withdrawn !== undefined\r\n                        }\r\n                      >\r\n                        {isMinting ? <CircularProgress /> : 'Withdraw'}\r\n                      </CTAButton>\r\n                    )}\r\n                  </>\r\n                )}\r\n\r\n                {phase === Phase.Phase4 && (\r\n                  <>\r\n                    {(!fairLaunch ||\r\n                      isWinner(fairLaunch) ||\r\n                      fairLaunchBalance > 0) && (\r\n                      <MintContainer>\r\n                        {candyMachine?.state.isActive &&\r\n                        candyMachine?.state.gatekeeper &&\r\n                        wallet.publicKey &&\r\n                        wallet.signTransaction ? (\r\n                          <GatewayProvider\r\n                            wallet={{\r\n                              publicKey:\r\n                                wallet.publicKey ||\r\n                                new PublicKey(CANDY_MACHINE_PROGRAM),\r\n                              //@ts-ignore\r\n                              signTransaction: wallet.signTransaction,\r\n                            }}\r\n                            // // Replace with following when added\r\n                            // gatekeeperNetwork={candyMachine.state.gatekeeper_network}\r\n                            gatekeeperNetwork={\r\n                              candyMachine?.state?.gatekeeper?.gatekeeperNetwork\r\n                            } // This is the ignite (captcha) network\r\n                            /// Don't need this for mainnet\r\n                            clusterUrl={rpcUrl}\r\n                            options={{ autoShowModal: false }}\r\n                          >\r\n                            <MintButton\r\n                              candyMachine={candyMachine}\r\n                              fairLaunch={fairLaunch}\r\n                              isMinting={isMinting}\r\n                              fairLaunchBalance={fairLaunchBalance}\r\n                              onMint={onMint}\r\n                            />\r\n                          </GatewayProvider>\r\n                        ) : (\r\n                          <MintButton\r\n                            candyMachine={candyMachine}\r\n                            fairLaunch={fairLaunch}\r\n                            isMinting={isMinting}\r\n                            fairLaunchBalance={fairLaunchBalance}\r\n                            onMint={onMint}\r\n                          />\r\n                        )}\r\n                      </MintContainer>\r\n                    )}\r\n\r\n                    {!(\r\n                      !fairLaunch ||\r\n                      isWinner(fairLaunch) ||\r\n                      fairLaunchBalance > 0\r\n                    ) && (\r\n                      <CTAButton\r\n                        onClick={onRefundTicket}\r\n                        variant=\"contained\"\r\n                        disabled={\r\n                          isMinting ||\r\n                          fairLaunch?.ticket.data === undefined ||\r\n                          fairLaunch?.ticket.data?.state.withdrawn !== undefined\r\n                        }\r\n                      >\r\n                        {isMinting ? <CircularProgress /> : 'Withdraw'}\r\n                      </CTAButton>\r\n                    )}\r\n                  </>\r\n                )}\r\n              </div>\r\n            )}\r\n\r\n            <Grid\r\n              container\r\n              justifyContent=\"space-between\"\r\n              color=\"textSecondary\"\r\n            >\r\n              {fairLaunch && (\r\n                <Link\r\n                  component=\"button\"\r\n                  variant=\"body2\"\r\n                  color=\"textSecondary\"\r\n                  align=\"left\"\r\n                  onClick={() => {\r\n                    setHowToOpen(true);\r\n                  }}\r\n                >\r\n                  How this raffle works\r\n                </Link>\r\n              )}\r\n              {fairLaunch?.ticket.data && (\r\n                <Link\r\n                  component=\"button\"\r\n                  variant=\"body2\"\r\n                  color=\"textSecondary\"\r\n                  align=\"right\"\r\n                  onClick={() => {\r\n                    if (\r\n                      !fairLaunch ||\r\n                      phase === Phase.Lottery ||\r\n                      isWinner(fairLaunch) ||\r\n                      fairLaunchBalance > 0\r\n                    ) {\r\n                      setRefundExplainerOpen(true);\r\n                    } else {\r\n                      onRefundTicket();\r\n                    }\r\n                  }}\r\n                >\r\n                  Withdraw funds\r\n                </Link>\r\n              )}\r\n            </Grid>\r\n            <Dialog\r\n              open={refundExplainerOpen}\r\n              onClose={() => setRefundExplainerOpen(false)}\r\n              PaperProps={{\r\n                style: { backgroundColor: '#222933', borderRadius: 6 },\r\n              }}\r\n            >\r\n              <MuiDialogContent style={{ padding: 24 }}>\r\n                During raffle phases, or if you are a winner, or if this website\r\n                is not configured to be a fair launch but simply a candy\r\n                machine, refunds are disallowed.\r\n              </MuiDialogContent>\r\n            </Dialog>\r\n            <Dialog\r\n              open={howToOpen}\r\n              onClose={() => setHowToOpen(false)}\r\n              PaperProps={{\r\n                style: { backgroundColor: '#222933', borderRadius: 6 },\r\n              }}\r\n            >\r\n              <MuiDialogTitle\r\n                disableTypography\r\n                style={{\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'space-between',\r\n                }}\r\n              >\r\n                <Link\r\n                  component=\"button\"\r\n                  variant=\"h6\"\r\n                  color=\"textSecondary\"\r\n                  onClick={() => {\r\n                    setHowToOpen(true);\r\n                  }}\r\n                >\r\n                  How it works\r\n                </Link>\r\n                <IconButton\r\n                  aria-label=\"close\"\r\n                  className={dialogStyles.closeButton}\r\n                  onClick={() => setHowToOpen(false)}\r\n                >\r\n                  <CloseIcon />\r\n                </IconButton>\r\n              </MuiDialogTitle>\r\n              <MuiDialogContent>\r\n                <Typography variant=\"h6\">\r\n                  Phase 1 - Set the fair price:\r\n                </Typography>\r\n                <Typography gutterBottom color=\"textSecondary\">\r\n                  Enter a bid in the range provided by the artist. The median of\r\n                  all bids will be the \"fair\" price of the raffle ticket.{' '}\r\n                  {fairLaunch?.state?.data?.fee && (\r\n                    <span>\r\n                      <b>\r\n                        All bids will incur a ◎{' '}\r\n                        {fairLaunch?.state?.data?.fee.toNumber() /\r\n                          LAMPORTS_PER_SOL}{' '}\r\n                        fee.\r\n                      </b>\r\n                    </span>\r\n                  )}\r\n                </Typography>\r\n                <Typography variant=\"h6\">Phase 2 - Grace period:</Typography>\r\n                <Typography gutterBottom color=\"textSecondary\">\r\n                  If your bid was at or above the fair price, you automatically\r\n                  get a raffle ticket at that price. There's nothing else you\r\n                  need to do. Your excess SOL will be returned to you when the\r\n                  Fair Launch authority withdraws from the treasury. If your bid\r\n                  is below the median price, you can still opt in at the fair\r\n                  price during this phase.\r\n                </Typography>\r\n                {candyMachinePredatesFairLaunch ? (\r\n                  <>\r\n                    <Typography variant=\"h6\">\r\n                      Phase 3 - The Candy Machine:\r\n                    </Typography>\r\n                    <Typography gutterBottom color=\"textSecondary\">\r\n                      Everyone who got a raffle ticket at the fair price is\r\n                      entered to win an NFT. If you win an NFT, congrats. If you\r\n                      don’t, no worries, your SOL will go right back into your\r\n                      wallet.\r\n                    </Typography>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <Typography variant=\"h6\">Phase 3 - The Lottery:</Typography>\r\n                    <Typography gutterBottom color=\"textSecondary\">\r\n                      Everyone who got a raffle ticket at the fair price is\r\n                      entered to win a Fair Launch Token that entitles them to\r\n                      an NFT at a later date using a Candy Machine here. If you\r\n                      don’t win, no worries, your SOL will go right back into\r\n                      your wallet.\r\n                    </Typography>\r\n                    <Typography variant=\"h6\">\r\n                      Phase 4 - The Candy Machine:\r\n                    </Typography>\r\n                    <Typography gutterBottom color=\"textSecondary\">\r\n                      On{' '}\r\n                      {candyMachine?.state.goLiveDate\r\n                        ? toDate(\r\n                            candyMachine?.state.goLiveDate,\r\n                          )?.toLocaleString()\r\n                        : ' some later date'}\r\n                      , you will be able to exchange your Fair Launch token for\r\n                      an NFT using the Candy Machine at this site by pressing\r\n                      the Mint Button.\r\n                    </Typography>\r\n                  </>\r\n                )}\r\n              </MuiDialogContent>\r\n            </Dialog>\r\n\r\n            {/* {wallet.connected && (\r\n              <p>\r\n                Address: {shortenAddress(wallet.publicKey?.toBase58() || '')}\r\n              </p>\r\n            )}\r\n\r\n            {wallet.connected && (\r\n              <p>Balance: {(balance || 0).toLocaleString()} SOL</p>\r\n            )} */}\r\n          </Grid>\r\n        </Paper>\r\n      </Container>\r\n\r\n      {fairLaunch && (\r\n        <Container\r\n          maxWidth=\"xs\"\r\n          style={{ position: 'relative', marginTop: 10 }}\r\n        >\r\n          <div style={{ margin: 20 }}>\r\n            <Grid container direction=\"row\" wrap=\"nowrap\">\r\n              <Grid container md={4} direction=\"column\">\r\n                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                  Bids\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"h6\"\r\n                  color=\"textPrimary\"\r\n                  style={{ fontWeight: 'bold' }}\r\n                >\r\n                  {fairLaunch?.state.numberTicketsSold.toNumber() || 0}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid container md={4} direction=\"column\">\r\n                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                  Median bid\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"h6\"\r\n                  color=\"textPrimary\"\r\n                  style={{ fontWeight: 'bold' }}\r\n                >\r\n                  ◎{' '}\r\n                  {phase === Phase.AnticipationPhase || phase === Phase.SetPrice\r\n                    ? '???'\r\n                    : formatNumber.format(median)}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid container md={4} direction=\"column\">\r\n                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                  Total raised\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"h6\"\r\n                  color=\"textPrimary\"\r\n                  style={{ fontWeight: 'bold' }}\r\n                >\r\n                  ◎{' '}\r\n                  {formatNumber.format(\r\n                    (fairLaunch?.treasury || 0) / LAMPORTS_PER_SOL,\r\n                  )}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </Container>\r\n      )}\r\n      <Snackbar\r\n        open={alertState.open}\r\n        autoHideDuration={6000}\r\n        onClose={() => setAlertState({ ...alertState, open: false })}\r\n      >\r\n        <Alert\r\n          onClose={() => setAlertState({ ...alertState, open: false })}\r\n          severity={alertState.severity}\r\n        >\r\n          {alertState.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useContext, useEffect, useMemo, useRef } from 'react';\r\nimport confetti from 'canvas-confetti';\r\n\r\nexport interface ConfettiContextState {\r\n  dropConfetti: () => void;\r\n}\r\n\r\nconst ConfettiContext = React.createContext<ConfettiContextState | null>(null);\r\n\r\nexport const ConfettiProvider = ({ children = null as any }) => {\r\n  const canvasRef = useRef<HTMLCanvasElement>();\r\n  const confettiRef = useRef<confetti.CreateTypes>();\r\n\r\n  const dropConfetti = useMemo(\r\n    () => () => {\r\n      if (confettiRef.current && canvasRef.current) {\r\n        canvasRef.current.style.visibility = 'visible';\r\n        confettiRef\r\n          .current({\r\n            particleCount: 400,\r\n            spread: 160,\r\n            origin: { y: 0.3 },\r\n          })\r\n          ?.finally(() => {\r\n            if (canvasRef.current) {\r\n              canvasRef.current.style.visibility = 'hidden';\r\n            }\r\n          });\r\n      }\r\n    },\r\n    [],\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (canvasRef.current && !confettiRef.current) {\r\n      canvasRef.current.style.visibility = 'hidden';\r\n      confettiRef.current = confetti.create(canvasRef.current, {\r\n        resize: true,\r\n        useWorker: true,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const canvasStyle: React.CSSProperties = {\r\n    width: '100vw',\r\n    height: '100vh',\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    top: 0,\r\n    left: 0,\r\n  };\r\n\r\n  return (\r\n    <ConfettiContext.Provider value={{ dropConfetti }}>\r\n      <canvas ref={canvasRef as any} style={canvasStyle} />\r\n      {children}\r\n    </ConfettiContext.Provider>\r\n  );\r\n};\r\n\r\nexport const Confetti = () => {\r\n  const { dropConfetti } = useConfetti();\r\n\r\n  useEffect(() => {\r\n    dropConfetti();\r\n  }, [dropConfetti]);\r\n\r\n  return <></>;\r\n};\r\n\r\nexport const useConfetti = () => {\r\n  const context = useContext(ConfettiContext);\r\n  return context as ConfettiContextState;\r\n};\r\n","import './App.css';\r\nimport { useMemo } from 'react';\r\n\r\nimport Home from './Home';\r\n\r\nimport * as anchor from '@project-serum/anchor';\r\nimport { clusterApiUrl } from '@solana/web3.js';\r\nimport { WalletAdapterNetwork } from '@solana/wallet-adapter-base';\r\nimport {\r\n  getPhantomWallet,\r\n  getSolflareWallet,\r\n  getSolletWallet,\r\n} from '@solana/wallet-adapter-wallets';\r\n\r\nimport {\r\n  ConnectionProvider,\r\n  WalletProvider,\r\n} from '@solana/wallet-adapter-react';\r\n\r\nimport { WalletDialogProvider } from '@solana/wallet-adapter-material-ui';\r\nimport { ThemeProvider, createTheme } from '@material-ui/core';\r\nimport { ConfettiProvider } from './confetti';\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    type: 'dark',\r\n  },\r\n});\r\n\r\nconst candyMachineId = process.env.REACT_APP_CANDY_MACHINE_ID\r\n  ? new anchor.web3.PublicKey(process.env.REACT_APP_CANDY_MACHINE_ID)\r\n  : undefined;\r\n\r\nconst fairLaunchId = process.env.REACT_APP_FAIR_LAUNCH_ID\r\n  ? new anchor.web3.PublicKey(process.env.REACT_APP_FAIR_LAUNCH_ID)\r\n  : undefined;\r\n\r\nconst network = process.env.REACT_APP_SOLANA_NETWORK as WalletAdapterNetwork;\r\n\r\nconst rpcHost = process.env.REACT_APP_SOLANA_RPC_HOST!;\r\nconst connection = new anchor.web3.Connection(rpcHost);\r\n\r\nconst startDateSeed = parseInt(process.env.REACT_APP_CANDY_START_DATE!, 10);\r\n\r\nconst txTimeout = 30000; // milliseconds (confirm this works for your project)\r\n\r\nconst App = () => {\r\n  const endpoint = useMemo(() => clusterApiUrl(network), []);\r\n\r\n  const wallets = useMemo(\r\n    () => [getPhantomWallet(), getSolflareWallet(), getSolletWallet()],\r\n    [],\r\n  );\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <ConnectionProvider endpoint={endpoint}>\r\n        <WalletProvider wallets={wallets} autoConnect>\r\n          <WalletDialogProvider>\r\n            <ConfettiProvider>\r\n              <Home\r\n                candyMachineId={candyMachineId}\r\n                fairLaunchId={fairLaunchId}\r\n                connection={connection}\r\n                startDate={startDateSeed}\r\n                txTimeout={txTimeout}\r\n                rpcHost={rpcHost}\r\n              />\r\n            </ConfettiProvider>\r\n          </WalletDialogProvider>\r\n        </WalletProvider>\r\n      </ConnectionProvider>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import * as anchor from '@project-serum/anchor';\r\n\r\nimport { TOKEN_PROGRAM_ID, Token } from '@solana/spl-token';\r\nimport { LAMPORTS_PER_SOL, TransactionInstruction } from '@solana/web3.js';\r\nimport {\r\n  createAssociatedTokenAccountInstruction,\r\n  getAtaForMint,\r\n  getFairLaunchTicketSeqLookup,\r\n} from './utils';\r\n\r\nexport const FAIR_LAUNCH_PROGRAM = new anchor.web3.PublicKey(\r\n  'faircnAB9k59Y4TXmLabBULeuTLgV7TkGMGNkjnA15j',\r\n);\r\n\r\nexport interface FairLaunchAccount {\r\n  id: anchor.web3.PublicKey;\r\n  program: anchor.Program;\r\n  state: FairLaunchState;\r\n\r\n  ticket: {\r\n    pubkey: anchor.web3.PublicKey;\r\n    bump: number;\r\n    data?: FairLaunchTicket;\r\n  };\r\n  lottery: {\r\n    pubkey: anchor.web3.PublicKey;\r\n    data?: Uint8Array;\r\n  };\r\n  treasury: number;\r\n}\r\n\r\nexport interface FairLaunchTicket {\r\n  fairLaunch: anchor.web3.PublicKey;\r\n  buyer: anchor.web3.PublicKey;\r\n  amount: anchor.BN;\r\n  state: {\r\n    punched?: {};\r\n    unpunched?: {};\r\n    withdrawn?: {};\r\n    no_sequence_struct: {};\r\n  };\r\n  bump: number;\r\n  seq: anchor.BN;\r\n}\r\n\r\nexport interface AntiRugSetting {\r\n  reserveBp: number;\r\n  tokenRequirement: anchor.BN;\r\n  selfDestructDate: anchor.BN;\r\n}\r\nexport interface FairLaunchState {\r\n  authority: anchor.web3.PublicKey;\r\n  bump: number;\r\n\r\n  currentMedian: anchor.BN;\r\n  currentEligibleHolders: anchor.BN;\r\n  data: {\r\n    antiRugSetting?: AntiRugSetting;\r\n    fee: anchor.BN;\r\n    numberOfTokens: anchor.BN;\r\n    phaseOneEnd: anchor.BN;\r\n    phaseOneStart: anchor.BN;\r\n    phaseTwoEnd: anchor.BN;\r\n    priceRangeEnd: anchor.BN;\r\n    priceRangeStart: anchor.BN;\r\n    lotteryDuration: anchor.BN;\r\n    tickSize: anchor.BN;\r\n    uuid: string;\r\n  };\r\n  numberTicketsDropped: anchor.BN;\r\n  numberTicketsPunched: anchor.BN;\r\n  numberTicketsSold: anchor.BN;\r\n  numberTicketsUnSeqed: anchor.BN;\r\n  numberTokensBurnedForRefunds: anchor.BN;\r\n  numberTokensPreminted: anchor.BN;\r\n  phaseThreeStarted: boolean;\r\n  tokenMint: anchor.web3.PublicKey;\r\n  tokenMintBump: number;\r\n  treasury: anchor.web3.PublicKey;\r\n  treasuryBump: number;\r\n  treasuryMint: anchor.web3.PublicKey; // only for SPL tokens\r\n  treasurySnapshot: null;\r\n}\r\n\r\nexport enum LotteryState {\r\n  Brewing = 'Brewing',\r\n  Finished = 'Finished',\r\n  PastDue = 'Past Due',\r\n}\r\n\r\nexport const getLotteryState = (\r\n  phaseThree: boolean | undefined,\r\n  lottery: Uint8Array | null,\r\n  lotteryDuration: anchor.BN,\r\n  phaseTwoEnd: anchor.BN,\r\n): LotteryState => {\r\n  if (\r\n    !phaseThree &&\r\n    (!lottery || lottery.length === 0) &&\r\n    phaseTwoEnd.add(lotteryDuration).lt(new anchor.BN(Date.now() / 1000))\r\n  ) {\r\n    return LotteryState.PastDue;\r\n  } else if (phaseThree) {\r\n    return LotteryState.Finished;\r\n  } else {\r\n    return LotteryState.Brewing;\r\n  }\r\n};\r\n\r\nexport const getFairLaunchState = async (\r\n  anchorWallet: anchor.Wallet,\r\n  fairLaunchId: anchor.web3.PublicKey,\r\n  connection: anchor.web3.Connection,\r\n): Promise<FairLaunchAccount> => {\r\n  const provider = new anchor.Provider(connection, anchorWallet, {\r\n    preflightCommitment: 'recent',\r\n  });\r\n\r\n  const idl = await anchor.Program.fetchIdl(FAIR_LAUNCH_PROGRAM, provider);\r\n\r\n  const program = new anchor.Program(idl, FAIR_LAUNCH_PROGRAM, provider);\r\n  const state: any = await program.account.fairLaunch.fetch(fairLaunchId);\r\n\r\n  const [fairLaunchTicket, bump] = await getFairLaunchTicket(\r\n    //@ts-ignore\r\n    state.tokenMint,\r\n    anchorWallet.publicKey,\r\n  );\r\n\r\n  let fairLaunchData: any;\r\n\r\n  try {\r\n    fairLaunchData = await program.account.fairLaunchTicket.fetch(\r\n      fairLaunchTicket,\r\n    );\r\n  } catch {\r\n    console.log('No ticket');\r\n  }\r\n\r\n  const treasury = await program.provider.connection.getBalance(state.treasury);\r\n\r\n  let lotteryData: Uint8Array = new Uint8Array([]);\r\n  let fairLaunchLotteryBitmap = (\r\n    await getFairLaunchLotteryBitmap(\r\n      //@ts-ignore\r\n      state.tokenMint,\r\n    )\r\n  )[0];\r\n\r\n  try {\r\n    const fairLaunchLotteryBitmapObj =\r\n      await program.provider.connection.getAccountInfo(fairLaunchLotteryBitmap);\r\n\r\n    lotteryData = new Uint8Array(fairLaunchLotteryBitmapObj?.data || []);\r\n  } catch (e) {\r\n    console.log('Could not find fair launch lottery.');\r\n    console.log(e);\r\n  }\r\n\r\n  return {\r\n    id: fairLaunchId,\r\n    state,\r\n    program,\r\n    ticket: {\r\n      pubkey: fairLaunchTicket,\r\n      bump,\r\n      data: fairLaunchData,\r\n    },\r\n    lottery: {\r\n      pubkey: fairLaunchLotteryBitmap,\r\n      data: lotteryData,\r\n    },\r\n    treasury,\r\n  };\r\n};\r\n\r\nexport const punchTicket = async (\r\n  anchorWallet: anchor.Wallet,\r\n  fairLaunch: FairLaunchAccount,\r\n) => {\r\n  const fairLaunchTicket = (\r\n    await getFairLaunchTicket(\r\n      //@ts-ignore\r\n      fairLaunch.state.tokenMint,\r\n      anchorWallet.publicKey,\r\n    )\r\n  )[0];\r\n\r\n  const ticket = fairLaunch.ticket.data;\r\n\r\n  const fairLaunchLotteryBitmap = ( //@ts-ignore\r\n    await getFairLaunchLotteryBitmap(fairLaunch.state.tokenMint)\r\n  )[0];\r\n\r\n  const buyerTokenAccount = (\r\n    await getAtaForMint(\r\n      //@ts-ignore\r\n      fairLaunch.state.tokenMint,\r\n      anchorWallet.publicKey,\r\n    )\r\n  )[0];\r\n\r\n  if (ticket?.amount.gt(fairLaunch.state.currentMedian)) {\r\n    console.log(\r\n      'Adjusting down...',\r\n      ticket?.amount.toNumber(),\r\n      fairLaunch.state.currentMedian.toNumber(),\r\n    );\r\n    const { remainingAccounts, instructions, signers } =\r\n      await getSetupForTicketing(\r\n        fairLaunch.program,\r\n        fairLaunch.state.currentMedian.toNumber(),\r\n        anchorWallet,\r\n        fairLaunch,\r\n        fairLaunchTicket,\r\n      );\r\n    await fairLaunch.program.rpc.adjustTicket(fairLaunch.state.currentMedian, {\r\n      accounts: {\r\n        fairLaunchTicket,\r\n        fairLaunch: fairLaunch.id,\r\n        fairLaunchLotteryBitmap,\r\n        //@ts-ignore\r\n        treasury: fairLaunch.state.treasury,\r\n        systemProgram: anchor.web3.SystemProgram.programId,\r\n        clock: anchor.web3.SYSVAR_CLOCK_PUBKEY,\r\n      },\r\n      __private: { logAccounts: true },\r\n      instructions: instructions.length > 0 ? instructions : undefined,\r\n      remainingAccounts: [\r\n        {\r\n          pubkey: anchorWallet.publicKey,\r\n          isSigner: true,\r\n          isWritable: true,\r\n        },\r\n        ...remainingAccounts,\r\n      ],\r\n      signers,\r\n    });\r\n  }\r\n\r\n  const accountExists =\r\n    await fairLaunch.program.provider.connection.getAccountInfo(\r\n      buyerTokenAccount,\r\n    );\r\n\r\n  const instructions = !accountExists\r\n    ? [\r\n        createAssociatedTokenAccountInstruction(\r\n          buyerTokenAccount,\r\n          anchorWallet.publicKey,\r\n          anchorWallet.publicKey,\r\n          //@ts-ignore\r\n          fairLaunch.state.tokenMint,\r\n        ),\r\n      ]\r\n    : [];\r\n\r\n  await fairLaunch.program.rpc.punchTicket({\r\n    accounts: {\r\n      fairLaunchTicket,\r\n      fairLaunch: fairLaunch.id,\r\n      fairLaunchLotteryBitmap,\r\n      payer: anchorWallet.publicKey,\r\n      buyerTokenAccount,\r\n      //@ts-ignore\r\n      tokenMint: fairLaunch.state.tokenMint,\r\n      tokenProgram: TOKEN_PROGRAM_ID,\r\n    },\r\n    instructions: instructions.length > 0 ? instructions : undefined,\r\n  });\r\n};\r\n\r\nexport const getFairLaunchTicket = async (\r\n  tokenMint: anchor.web3.PublicKey,\r\n  buyer: anchor.web3.PublicKey,\r\n): Promise<[anchor.web3.PublicKey, number]> => {\r\n  return await anchor.web3.PublicKey.findProgramAddress(\r\n    [Buffer.from('fair_launch'), tokenMint.toBuffer(), buyer.toBuffer()],\r\n    FAIR_LAUNCH_PROGRAM,\r\n  );\r\n};\r\n\r\nexport const getFairLaunchLotteryBitmap = async (\r\n  tokenMint: anchor.web3.PublicKey,\r\n): Promise<[anchor.web3.PublicKey, number]> => {\r\n  return await anchor.web3.PublicKey.findProgramAddress(\r\n    [Buffer.from('fair_launch'), tokenMint.toBuffer(), Buffer.from('lottery')],\r\n    FAIR_LAUNCH_PROGRAM,\r\n  );\r\n};\r\n\r\nconst getSetupForTicketing = async (\r\n  anchorProgram: anchor.Program,\r\n  amount: number,\r\n  anchorWallet: anchor.Wallet,\r\n  fairLaunch: FairLaunchAccount | undefined,\r\n  ticketKey: anchor.web3.PublicKey,\r\n): Promise<{\r\n  remainingAccounts: {\r\n    pubkey: anchor.web3.PublicKey | null;\r\n    isWritable: boolean;\r\n    isSigner: boolean;\r\n  }[];\r\n  instructions: TransactionInstruction[];\r\n  signers: anchor.web3.Keypair[];\r\n  amountLamports: number;\r\n}> => {\r\n  if (!fairLaunch) {\r\n    return {\r\n      remainingAccounts: [],\r\n      instructions: [],\r\n      signers: [],\r\n      amountLamports: 0,\r\n    };\r\n  }\r\n  const ticket = fairLaunch.ticket;\r\n\r\n  const remainingAccounts = [];\r\n  const instructions = [];\r\n  const signers = [];\r\n\r\n  let amountLamports = 0;\r\n  //@ts-ignore\r\n  if (!fairLaunch.state.treasuryMint) {\r\n    if (!ticket && amount === 0) {\r\n      amountLamports = fairLaunch.state.data.priceRangeStart.toNumber();\r\n    } else {\r\n      amountLamports = Math.ceil(amount * LAMPORTS_PER_SOL);\r\n    }\r\n  } else {\r\n    const transferAuthority = anchor.web3.Keypair.generate();\r\n    signers.push(transferAuthority);\r\n    // NOTE this token impl will not work till you get decimal mantissa and multiply...\r\n    /// ex from cli wont work since you dont have a Signer, but an anchor.Wallet\r\n    /*\r\n    const token = new Token(\r\n        anchorProgram.provider.connection,\r\n        //@ts-ignore\r\n        fairLaunchObj.treasuryMint,\r\n        TOKEN_PROGRAM_ID,\r\n        walletKeyPair,\r\n      );\r\n      const mintInfo = await token.getMintInfo();\r\n      amountNumber = Math.ceil(amountNumber * 10 ** mintInfo.decimals);\r\n    */\r\n    instructions.push(\r\n      Token.createApproveInstruction(\r\n        TOKEN_PROGRAM_ID,\r\n        //@ts-ignore\r\n        fairLaunch.state.treasuryMint,\r\n        transferAuthority.publicKey,\r\n        anchorWallet.publicKey,\r\n        [],\r\n        //@ts-ignore\r\n\r\n        // TODO: get mint decimals\r\n        amountNumber + fairLaunch.state.data.fees.toNumber(),\r\n      ),\r\n    );\r\n\r\n    remainingAccounts.push({\r\n      //@ts-ignore\r\n      pubkey: fairLaunch.state.treasuryMint,\r\n      isWritable: true,\r\n      isSigner: false,\r\n    });\r\n    remainingAccounts.push({\r\n      pubkey: (\r\n        await getAtaForMint(\r\n          //@ts-ignore\r\n          fairLaunch.state.treasuryMint,\r\n          anchorWallet.publicKey,\r\n        )\r\n      )[0],\r\n      isWritable: true,\r\n      isSigner: false,\r\n    });\r\n    remainingAccounts.push({\r\n      pubkey: transferAuthority.publicKey,\r\n      isWritable: false,\r\n      isSigner: true,\r\n    });\r\n    remainingAccounts.push({\r\n      pubkey: TOKEN_PROGRAM_ID,\r\n      isWritable: false,\r\n      isSigner: false,\r\n    });\r\n  }\r\n\r\n  if (ticket.data) {\r\n    const [fairLaunchTicketSeqLookup, seqBump] =\r\n      await getFairLaunchTicketSeqLookup(\r\n        fairLaunch.state.tokenMint,\r\n        ticket.data?.seq,\r\n      );\r\n\r\n    const seq = await anchorProgram.provider.connection.getAccountInfo(\r\n      fairLaunchTicketSeqLookup,\r\n    );\r\n    if (!seq) {\r\n      instructions.push(\r\n        await anchorProgram.instruction.createTicketSeq(seqBump, {\r\n          accounts: {\r\n            fairLaunchTicketSeqLookup,\r\n            fairLaunch: fairLaunch.id,\r\n            fairLaunchTicket: ticketKey,\r\n            payer: anchorWallet.publicKey,\r\n            systemProgram: anchor.web3.SystemProgram.programId,\r\n            rent: anchor.web3.SYSVAR_RENT_PUBKEY,\r\n          },\r\n          signers: [],\r\n        }),\r\n      );\r\n    }\r\n  }\r\n\r\n  return {\r\n    remainingAccounts,\r\n    instructions,\r\n    signers,\r\n    amountLamports,\r\n  };\r\n};\r\n\r\nexport const receiveRefund = async (\r\n  anchorWallet: anchor.Wallet,\r\n  fairLaunch: FairLaunchAccount | undefined,\r\n) => {\r\n  if (!fairLaunch) {\r\n    return;\r\n  }\r\n\r\n  const buyerTokenAccount = (\r\n    await getAtaForMint(fairLaunch.state.tokenMint, anchorWallet.publicKey)\r\n  )[0];\r\n\r\n  const transferAuthority = anchor.web3.Keypair.generate();\r\n\r\n  const signers = [transferAuthority];\r\n  const instructions = [\r\n    Token.createApproveInstruction(\r\n      TOKEN_PROGRAM_ID,\r\n      buyerTokenAccount,\r\n      transferAuthority.publicKey,\r\n      anchorWallet.publicKey,\r\n      [],\r\n      1,\r\n    ),\r\n  ];\r\n\r\n  const remainingAccounts = [];\r\n\r\n  if (fairLaunch.state.treasuryMint) {\r\n    remainingAccounts.push({\r\n      pubkey: fairLaunch.state.treasuryMint,\r\n      isWritable: true,\r\n      isSigner: false,\r\n    });\r\n    remainingAccounts.push({\r\n      pubkey: (\r\n        await getAtaForMint(\r\n          fairLaunch.state.treasuryMint,\r\n          anchorWallet.publicKey,\r\n        )\r\n      )[0],\r\n      isWritable: true,\r\n      isSigner: false,\r\n    });\r\n  }\r\n\r\n  console.log(\r\n    'tfr',\r\n    fairLaunch.state.treasury.toBase58(),\r\n    anchorWallet.publicKey.toBase58(),\r\n    buyerTokenAccount.toBase58(),\r\n  );\r\n  await fairLaunch.program.rpc.receiveRefund({\r\n    accounts: {\r\n      fairLaunch: fairLaunch.id,\r\n      treasury: fairLaunch.state.treasury,\r\n      buyer: anchorWallet.publicKey,\r\n      buyerTokenAccount,\r\n      transferAuthority: transferAuthority.publicKey,\r\n      tokenMint: fairLaunch.state.tokenMint,\r\n      tokenProgram: TOKEN_PROGRAM_ID,\r\n      systemProgram: anchor.web3.SystemProgram.programId,\r\n      clock: anchor.web3.SYSVAR_CLOCK_PUBKEY,\r\n    },\r\n\r\n    __private: { logAccounts: true },\r\n    remainingAccounts,\r\n    instructions,\r\n    signers,\r\n  });\r\n};\r\nexport const purchaseTicket = async (\r\n  amount: number,\r\n  anchorWallet: anchor.Wallet,\r\n  fairLaunch: FairLaunchAccount | undefined,\r\n) => {\r\n  if (!fairLaunch) {\r\n    return;\r\n  }\r\n\r\n  const ticket = fairLaunch.ticket.data;\r\n\r\n  const [fairLaunchTicket, bump] = await getFairLaunchTicket(\r\n    //@ts-ignore\r\n    fairLaunch.state.tokenMint,\r\n    anchorWallet.publicKey,\r\n  );\r\n\r\n  const { remainingAccounts, instructions, signers, amountLamports } =\r\n    await getSetupForTicketing(\r\n      fairLaunch.program,\r\n      amount,\r\n      anchorWallet,\r\n      fairLaunch,\r\n      fairLaunchTicket,\r\n    );\r\n\r\n  if (ticket) {\r\n    const fairLaunchLotteryBitmap = //@ts-ignore\r\n    (await getFairLaunchLotteryBitmap(fairLaunch.state.tokenMint))[0];\r\n    console.log(\r\n      'Anchor wallet',\r\n      anchorWallet.publicKey.toBase58(),\r\n      amountLamports,\r\n    );\r\n    await fairLaunch.program.rpc.adjustTicket(new anchor.BN(amountLamports), {\r\n      accounts: {\r\n        fairLaunchTicket,\r\n        fairLaunch: fairLaunch.id,\r\n        fairLaunchLotteryBitmap,\r\n        //@ts-ignore\r\n        treasury: fairLaunch.state.treasury,\r\n        systemProgram: anchor.web3.SystemProgram.programId,\r\n        clock: anchor.web3.SYSVAR_CLOCK_PUBKEY,\r\n      },\r\n      __private: { logAccounts: true },\r\n      remainingAccounts: [\r\n        {\r\n          pubkey: anchorWallet.publicKey,\r\n          isSigner: true,\r\n          isWritable: true,\r\n        },\r\n        ...remainingAccounts,\r\n      ],\r\n      signers,\r\n      instructions: instructions.length > 0 ? instructions : undefined,\r\n    });\r\n\r\n    return;\r\n  }\r\n  try {\r\n    console.log('Amount', amountLamports);\r\n    await fairLaunch.program.rpc.purchaseTicket(\r\n      bump,\r\n      new anchor.BN(amountLamports),\r\n      {\r\n        accounts: {\r\n          fairLaunchTicket,\r\n          fairLaunch: fairLaunch.id,\r\n          //@ts-ignore\r\n          treasury: fairLaunch.state.treasury,\r\n          buyer: anchorWallet.publicKey,\r\n          payer: anchorWallet.publicKey,\r\n          systemProgram: anchor.web3.SystemProgram.programId,\r\n          rent: anchor.web3.SYSVAR_RENT_PUBKEY,\r\n          clock: anchor.web3.SYSVAR_CLOCK_PUBKEY,\r\n        },\r\n        //__private: { logAccounts: true },\r\n        remainingAccounts,\r\n        signers,\r\n        instructions: instructions.length > 0 ? instructions : undefined,\r\n      },\r\n    );\r\n  } catch (e) {\r\n    console.log(e);\r\n    throw e;\r\n  }\r\n};\r\n\r\nexport const withdrawFunds = async (\r\n  anchorWallet: anchor.Wallet,\r\n  fairLaunch: FairLaunchAccount | undefined,\r\n) => {\r\n  if (!fairLaunch) {\r\n    return;\r\n  }\r\n\r\n  // TODO: create sequence ticket\r\n\r\n  const remainingAccounts = [];\r\n\r\n  //@ts-ignore\r\n  if (fairLaunch.state.treasuryMint) {\r\n    remainingAccounts.push({\r\n      //@ts-ignore\r\n      pubkey: fairLaunch.state.treasuryMint,\r\n      isWritable: true,\r\n      isSigner: false,\r\n    });\r\n    remainingAccounts.push({\r\n      pubkey: (\r\n        await getAtaForMint(\r\n          //@ts-ignore\r\n          fairLaunch.state.treasuryMint,\r\n          anchorWallet.publicKey,\r\n        )\r\n      )[0],\r\n      isWritable: true,\r\n      isSigner: false,\r\n    });\r\n    remainingAccounts.push({\r\n      pubkey: TOKEN_PROGRAM_ID,\r\n      isWritable: false,\r\n      isSigner: false,\r\n    });\r\n  }\r\n\r\n  await fairLaunch.program.rpc.withdrawFunds({\r\n    accounts: {\r\n      fairLaunch: fairLaunch.id,\r\n      // @ts-ignore\r\n      treasury: fairLaunch.state.treasury,\r\n      authority: anchorWallet.publicKey,\r\n      // @ts-ignore\r\n      tokenMint: fairLaunch.state.tokenMint,\r\n      systemProgram: anchor.web3.SystemProgram.programId,\r\n    },\r\n    remainingAccounts,\r\n  });\r\n};\r\n"],"sourceRoot":""}